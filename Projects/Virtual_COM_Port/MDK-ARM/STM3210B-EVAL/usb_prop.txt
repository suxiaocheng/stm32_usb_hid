; generated by ARM C/C++ Compiler, RVCT4.0 [Build 728]
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\STM3210B-EVAL\usb_prop.o --depend=.\STM3210B-EVAL\usb_prop.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\inc -I..\..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\Utilities\STM32_EVAL\STM3210B_EVAL -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_MD -DUSE_STM3210B_EVAL --omf_browse=.\STM3210B-EVAL\usb_prop.crf ..\src\usb_prop.c]
                          THUMB

                          AREA ||i.Virtual_Com_Port_Data_Setup||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_Data_Setup PROC
;;;258    *******************************************************************************/
;;;259    RESULT Virtual_Com_Port_Data_Setup(uint8_t RequestNo)
000000  b510              PUSH     {r4,lr}
;;;260    {
;;;261      uint8_t    *(*CopyRoutine)(uint16_t);
;;;262    
;;;263      CopyRoutine = NULL;
;;;264    
;;;265      if (RequestNo == GET_LINE_CODING)
;;;266      {
;;;267        if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
000002  4a10              LDR      r2,|L1.68|
000004  2100              MOVS     r1,#0                 ;263
000006  6812              LDR      r2,[r2,#0]
000008  2821              CMP      r0,#0x21              ;265
00000a  d106              BNE      |L1.26|
00000c  7810              LDRB     r0,[r2,#0]
00000e  f000007f          AND      r0,r0,#0x7f
000012  2821              CMP      r0,#0x21
000014  d10d              BNE      |L1.50|
;;;268        {
;;;269          CopyRoutine = Virtual_Com_Port_GetLineCoding;
000016  490c              LDR      r1,|L1.72|
000018  e00a              B        |L1.48|
                  |L1.26|
;;;270        }
;;;271      }
;;;272      else if (RequestNo == SET_LINE_CODING)
00001a  2820              CMP      r0,#0x20
00001c  d109              BNE      |L1.50|
;;;273      {
;;;274        if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
00001e  7810              LDRB     r0,[r2,#0]
000020  f000007f          AND      r0,r0,#0x7f
000024  2821              CMP      r0,#0x21
000026  d100              BNE      |L1.42|
;;;275        {
;;;276          CopyRoutine = Virtual_Com_Port_SetLineCoding;
000028  4908              LDR      r1,|L1.76|
                  |L1.42|
;;;277        }
;;;278        Request = SET_LINE_CODING;
00002a  4b09              LDR      r3,|L1.80|
00002c  2020              MOVS     r0,#0x20
00002e  7018              STRB     r0,[r3,#0]
                  |L1.48|
;;;279      }
;;;280    
;;;281      if (CopyRoutine == NULL)
000030  b909              CBNZ     r1,|L1.54|
                  |L1.50|
;;;282      {
;;;283        return USB_UNSUPPORT;
000032  2002              MOVS     r0,#2
;;;284      }
;;;285    
;;;286      pInformation->Ctrl_Info.CopyData = CopyRoutine;
;;;287      pInformation->Ctrl_Info.Usb_wOffset = 0;
;;;288      (*CopyRoutine)(0);
;;;289      return USB_SUCCESS;
;;;290    }
000034  bd10              POP      {r4,pc}
                  |L1.54|
000036  2000              MOVS     r0,#0                 ;287
000038  6191              STR      r1,[r2,#0x18]         ;287
00003a  8250              STRH     r0,[r2,#0x12]         ;287
00003c  4788              BLX      r1                    ;288
00003e  2000              MOVS     r0,#0                 ;289
000040  bd10              POP      {r4,pc}
;;;291    
                          ENDP

000042  0000              DCW      0x0000
                  |L1.68|
                          DCD      pInformation
                  |L1.72|
                          DCD      Virtual_Com_Port_GetLineCoding
                  |L1.76|
                          DCD      Virtual_Com_Port_SetLineCoding
                  |L1.80|
                          DCD      ||.data||

                          AREA ||i.Virtual_Com_Port_GetConfigDescriptor||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_GetConfigDescriptor PROC
;;;335    *******************************************************************************/
;;;336    uint8_t *Virtual_Com_Port_GetConfigDescriptor(uint16_t Length)
000000  4901              LDR      r1,|L2.8|
;;;337    {
;;;338      return Standard_GetDescriptorData(Length, &Config_Descriptor);
000002  f7ffbffe          B.W      Standard_GetDescriptorData
;;;339    }
;;;340    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      ||.data||+0x14

                          AREA ||i.Virtual_Com_Port_GetDeviceDescriptor||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_GetDeviceDescriptor PROC
;;;323    *******************************************************************************/
;;;324    uint8_t *Virtual_Com_Port_GetDeviceDescriptor(uint16_t Length)
000000  4901              LDR      r1,|L3.8|
;;;325    {
;;;326      return Standard_GetDescriptorData(Length, &Device_Descriptor);
000002  f7ffbffe          B.W      Standard_GetDescriptorData
;;;327    }
;;;328    
                          ENDP

000006  0000              DCW      0x0000
                  |L3.8|
                          DCD      ||.data||+0xc

                          AREA ||i.Virtual_Com_Port_GetLineCoding||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_GetLineCoding PROC
;;;389    *******************************************************************************/
;;;390    uint8_t *Virtual_Com_Port_GetLineCoding(uint16_t Length)
000000  b928              CBNZ     r0,|L4.14|
;;;391    {
;;;392      if (Length == 0)
;;;393      {
;;;394        pInformation->Ctrl_Info.Usb_wLength = sizeof(linecoding);
000002  4904              LDR      r1,|L4.20|
000004  2008              MOVS     r0,#8
000006  6809              LDR      r1,[r1,#0]  ; pInformation
000008  8208              STRH     r0,[r1,#0x10]
;;;395        return NULL;
00000a  2000              MOVS     r0,#0
;;;396      }
;;;397      return(uint8_t *)&linecoding;
;;;398    }
00000c  4770              BX       lr
                  |L4.14|
00000e  4802              LDR      r0,|L4.24|
000010  4770              BX       lr
;;;399    
                          ENDP

000012  0000              DCW      0x0000
                  |L4.20|
                          DCD      pInformation
                  |L4.24|
                          DCD      ||.data||+0x4

                          AREA ||i.Virtual_Com_Port_GetStringDescriptor||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_GetStringDescriptor PROC
;;;347    *******************************************************************************/
;;;348    uint8_t *Virtual_Com_Port_GetStringDescriptor(uint16_t Length)
000000  4905              LDR      r1,|L5.24|
;;;349    {
;;;350      uint8_t wValue0 = pInformation->USBwValue0;
000002  6809              LDR      r1,[r1,#0]  ; pInformation
000004  78c9              LDRB     r1,[r1,#3]
;;;351      if (wValue0 > 4)
000006  2904              CMP      r1,#4
000008  d901              BLS      |L5.14|
;;;352      {
;;;353        return NULL;
00000a  2000              MOVS     r0,#0
;;;354      }
;;;355      else
;;;356      {
;;;357        return Standard_GetDescriptorData(Length, &String_Descriptor[wValue0]);
;;;358      }
;;;359    }
00000c  4770              BX       lr
                  |L5.14|
00000e  4a03              LDR      r2,|L5.28|
000010  eb0201c1          ADD      r1,r2,r1,LSL #3       ;357
000014  f7ffbffe          B.W      Standard_GetDescriptorData
;;;360    
                          ENDP

                  |L5.24|
                          DCD      pInformation
                  |L5.28|
                          DCD      ||.data||+0x4c

                          AREA ||i.Virtual_Com_Port_Get_Interface_Setting||, CODE, READONLY, ALIGN=1

                  Virtual_Com_Port_Get_Interface_Setting PROC
;;;369    *******************************************************************************/
;;;370    RESULT Virtual_Com_Port_Get_Interface_Setting(uint8_t Interface, uint8_t AlternateSetting)
000000  b909              CBNZ     r1,|L6.6|
;;;371    {
;;;372      if (AlternateSetting > 0)
;;;373      {
;;;374        return USB_UNSUPPORT;
;;;375      }
;;;376      else if (Interface > 1)
000002  2801              CMP      r0,#1
000004  d901              BLS      |L6.10|
                  |L6.6|
;;;377      {
;;;378        return USB_UNSUPPORT;
000006  2002              MOVS     r0,#2
;;;379      }
;;;380      return USB_SUCCESS;
;;;381    }
000008  4770              BX       lr
                  |L6.10|
00000a  2000              MOVS     r0,#0                 ;380
00000c  4770              BX       lr
;;;382    
                          ENDP


                          AREA ||i.Virtual_Com_Port_NoData_Setup||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_NoData_Setup PROC
;;;298    *******************************************************************************/
;;;299    RESULT Virtual_Com_Port_NoData_Setup(uint8_t RequestNo)
000000  4907              LDR      r1,|L7.32|
;;;300    {
;;;301    
;;;302      if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
000002  6809              LDR      r1,[r1,#0]  ; pInformation
000004  7809              LDRB     r1,[r1,#0]
000006  f001017f          AND      r1,r1,#0x7f
00000a  2921              CMP      r1,#0x21
00000c  d105              BNE      |L7.26|
;;;303      {
;;;304        if (RequestNo == SET_COMM_FEATURE)
00000e  2802              CMP      r0,#2
000010  d001              BEQ      |L7.22|
;;;305        {
;;;306          return USB_SUCCESS;
;;;307        }
;;;308        else if (RequestNo == SET_CONTROL_LINE_STATE)
000012  2822              CMP      r0,#0x22
000014  d101              BNE      |L7.26|
                  |L7.22|
;;;309        {
;;;310          return USB_SUCCESS;
000016  2000              MOVS     r0,#0
;;;311        }
;;;312      }
;;;313    
;;;314      return USB_UNSUPPORT;
;;;315    }
000018  4770              BX       lr
                  |L7.26|
00001a  2002              MOVS     r0,#2                 ;314
00001c  4770              BX       lr
;;;316    
                          ENDP

00001e  0000              DCW      0x0000
                  |L7.32|
                          DCD      pInformation

                          AREA ||i.Virtual_Com_Port_Reset||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_Reset PROC
;;;148    *******************************************************************************/
;;;149    void Virtual_Com_Port_Reset(void)
000000  b510              PUSH     {r4,lr}
;;;150    {
;;;151      /* Set Virtual_Com_Port DEVICE as not configured */
;;;152      pInformation->Current_Configuration = 0;
000002  4833              LDR      r0,|L8.208|
000004  2100              MOVS     r1,#0
000006  6800              LDR      r0,[r0,#0]  ; pInformation
;;;153    
;;;154      /* Current Feature initialization */
;;;155      pInformation->Current_Feature = Virtual_Com_Port_ConfigDescriptor[7];
000008  4a32              LDR      r2,|L8.212|
00000a  7281              STRB     r1,[r0,#0xa]          ;152
00000c  79d2              LDRB     r2,[r2,#7]  ; Virtual_Com_Port_ConfigDescriptor
00000e  7242              STRB     r2,[r0,#9]
;;;156    
;;;157      /* Set Virtual_Com_Port DEVICE with the default Interface*/
;;;158      pInformation->Current_Interface = 0;
000010  72c1              STRB     r1,[r0,#0xb]
;;;159    
;;;160      SetBTABLE(BTABLE_ADDRESS);
000012  4608              MOV      r0,r1
000014  f7fffffe          BL       SetBTABLE
;;;161    
;;;162      /* Initialize Endpoint 0 */
;;;163      SetEPType(ENDP0, EP_CONTROL);
000018  f44f7100          MOV      r1,#0x200
00001c  2000              MOVS     r0,#0
00001e  f7fffffe          BL       SetEPType
;;;164      SetEPTxStatus(ENDP0, EP_TX_STALL);
000022  2110              MOVS     r1,#0x10
000024  2000              MOVS     r0,#0
000026  f7fffffe          BL       SetEPTxStatus
;;;165      SetEPRxAddr(ENDP0, ENDP0_RXADDR);
00002a  2140              MOVS     r1,#0x40
00002c  2000              MOVS     r0,#0
00002e  f7fffffe          BL       SetEPRxAddr
;;;166      SetEPTxAddr(ENDP0, ENDP0_TXADDR);
000032  2180              MOVS     r1,#0x80
000034  2000              MOVS     r0,#0
000036  f7fffffe          BL       SetEPTxAddr
;;;167      Clear_Status_Out(ENDP0);
00003a  2000              MOVS     r0,#0
00003c  f7fffffe          BL       Clear_Status_Out
;;;168      SetEPRxCount(ENDP0, Device_Property.MaxPacketSize);
000040  4825              LDR      r0,|L8.216|
000042  f890102c          LDRB     r1,[r0,#0x2c]  ; Device_Property
000046  2000              MOVS     r0,#0
000048  f7fffffe          BL       SetEPRxCount
;;;169      SetEPRxValid(ENDP0);
00004c  2000              MOVS     r0,#0
00004e  f7fffffe          BL       SetEPRxValid
;;;170    
;;;171      /* Initialize Endpoint 1 */
;;;172      SetEPType(ENDP1, EP_BULK);
000052  2100              MOVS     r1,#0
000054  2001              MOVS     r0,#1
000056  f7fffffe          BL       SetEPType
;;;173      SetEPTxAddr(ENDP1, ENDP1_TXADDR);
00005a  21c0              MOVS     r1,#0xc0
00005c  2001              MOVS     r0,#1
00005e  f7fffffe          BL       SetEPTxAddr
;;;174      SetEPTxStatus(ENDP1, EP_TX_NAK);
000062  2120              MOVS     r1,#0x20
000064  2001              MOVS     r0,#1
000066  f7fffffe          BL       SetEPTxStatus
;;;175      SetEPRxStatus(ENDP1, EP_RX_DIS);
00006a  2100              MOVS     r1,#0
00006c  2001              MOVS     r0,#1
00006e  f7fffffe          BL       SetEPRxStatus
;;;176    
;;;177      /* Initialize Endpoint 2 */
;;;178      SetEPType(ENDP2, EP_INTERRUPT);
000072  f44f61c0          MOV      r1,#0x600
000076  2002              MOVS     r0,#2
000078  f7fffffe          BL       SetEPType
;;;179      SetEPTxAddr(ENDP2, ENDP2_TXADDR);
00007c  f44f7180          MOV      r1,#0x100
000080  2002              MOVS     r0,#2
000082  f7fffffe          BL       SetEPTxAddr
;;;180      SetEPRxStatus(ENDP2, EP_RX_DIS);
000086  2100              MOVS     r1,#0
000088  2002              MOVS     r0,#2
00008a  f7fffffe          BL       SetEPRxStatus
;;;181      SetEPTxStatus(ENDP2, EP_TX_NAK);
00008e  2120              MOVS     r1,#0x20
000090  2002              MOVS     r0,#2
000092  f7fffffe          BL       SetEPTxStatus
;;;182    
;;;183      /* Initialize Endpoint 3 */
;;;184      SetEPType(ENDP3, EP_BULK);
000096  2100              MOVS     r1,#0
000098  2003              MOVS     r0,#3
00009a  f7fffffe          BL       SetEPType
;;;185      SetEPRxAddr(ENDP3, ENDP3_RXADDR);
00009e  f44f7188          MOV      r1,#0x110
0000a2  2003              MOVS     r0,#3
0000a4  f7fffffe          BL       SetEPRxAddr
;;;186      SetEPRxCount(ENDP3, VIRTUAL_COM_PORT_DATA_SIZE);
0000a8  2140              MOVS     r1,#0x40
0000aa  2003              MOVS     r0,#3
0000ac  f7fffffe          BL       SetEPRxCount
;;;187      SetEPRxStatus(ENDP3, EP_RX_VALID);
0000b0  f44f5140          MOV      r1,#0x3000
0000b4  2003              MOVS     r0,#3
0000b6  f7fffffe          BL       SetEPRxStatus
;;;188      SetEPTxStatus(ENDP3, EP_TX_DIS);
0000ba  2100              MOVS     r1,#0
0000bc  2003              MOVS     r0,#3
0000be  f7fffffe          BL       SetEPTxStatus
;;;189    
;;;190      /* Set this device to response on default address */
;;;191      SetDeviceAddress(0);
0000c2  2000              MOVS     r0,#0
0000c4  f7fffffe          BL       SetDeviceAddress
;;;192      
;;;193      bDeviceState = ATTACHED;
0000c8  4904              LDR      r1,|L8.220|
0000ca  2001              MOVS     r0,#1
0000cc  6008              STR      r0,[r1,#0]  ; bDeviceState
;;;194    }
0000ce  bd10              POP      {r4,pc}
;;;195    
                          ENDP

                  |L8.208|
                          DCD      pInformation
                  |L8.212|
                          DCD      Virtual_Com_Port_ConfigDescriptor
                  |L8.216|
                          DCD      ||.data||+0x1c
                  |L8.220|
                          DCD      bDeviceState

                          AREA ||i.Virtual_Com_Port_SetConfiguration||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_SetConfiguration PROC
;;;202    *******************************************************************************/
;;;203    void Virtual_Com_Port_SetConfiguration(void)
000000  4803              LDR      r0,|L9.16|
;;;204    {
;;;205      DEVICE_INFO *pInfo = &Device_Info;
;;;206    
;;;207      if (pInfo->Current_Configuration != 0)
000002  7a80              LDRB     r0,[r0,#0xa]
000004  2800              CMP      r0,#0
000006  d002              BEQ      |L9.14|
;;;208      {
;;;209        /* Device configured */
;;;210        bDeviceState = CONFIGURED;
000008  4902              LDR      r1,|L9.20|
00000a  2005              MOVS     r0,#5
00000c  6008              STR      r0,[r1,#0]  ; bDeviceState
                  |L9.14|
;;;211      }
;;;212    }
00000e  4770              BX       lr
;;;213    
                          ENDP

                  |L9.16|
                          DCD      Device_Info
                  |L9.20|
                          DCD      bDeviceState

                          AREA ||i.Virtual_Com_Port_SetDeviceAddress||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_SetDeviceAddress PROC
;;;220    *******************************************************************************/
;;;221    void Virtual_Com_Port_SetDeviceAddress (void)
000000  4901              LDR      r1,|L10.8|
;;;222    {
;;;223      bDeviceState = ADDRESSED;
000002  2004              MOVS     r0,#4
000004  6008              STR      r0,[r1,#0]  ; bDeviceState
;;;224    }
000006  4770              BX       lr
;;;225    
                          ENDP

                  |L10.8|
                          DCD      bDeviceState

                          AREA ||i.Virtual_Com_Port_SetLineCoding||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_SetLineCoding PROC
;;;406    *******************************************************************************/
;;;407    uint8_t *Virtual_Com_Port_SetLineCoding(uint16_t Length)
000000  b928              CBNZ     r0,|L11.14|
;;;408    {
;;;409      if (Length == 0)
;;;410      {
;;;411        pInformation->Ctrl_Info.Usb_wLength = sizeof(linecoding);
000002  4904              LDR      r1,|L11.20|
000004  2008              MOVS     r0,#8
000006  6809              LDR      r1,[r1,#0]  ; pInformation
000008  8208              STRH     r0,[r1,#0x10]
;;;412        return NULL;
00000a  2000              MOVS     r0,#0
;;;413      }
;;;414      return(uint8_t *)&linecoding;
;;;415    }
00000c  4770              BX       lr
                  |L11.14|
00000e  4802              LDR      r0,|L11.24|
000010  4770              BX       lr
;;;416    
                          ENDP

000012  0000              DCW      0x0000
                  |L11.20|
                          DCD      pInformation
                  |L11.24|
                          DCD      ||.data||+0x4

                          AREA ||i.Virtual_Com_Port_Status_In||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_Status_In PROC
;;;232    *******************************************************************************/
;;;233    void Virtual_Com_Port_Status_In(void)
000000  b510              PUSH     {r4,lr}
;;;234    {
;;;235      if (Request == SET_LINE_CODING)
000002  4c04              LDR      r4,|L12.20|
000004  7820              LDRB     r0,[r4,#0]  ; Request
000006  2820              CMP      r0,#0x20
000008  d103              BNE      |L12.18|
;;;236      {
;;;237        USART_Config();
00000a  f7fffffe          BL       USART_Config
;;;238        Request = 0;
00000e  2000              MOVS     r0,#0
000010  7020              STRB     r0,[r4,#0]
                  |L12.18|
;;;239      }
;;;240    }
000012  bd10              POP      {r4,pc}
;;;241    
                          ENDP

                  |L12.20|
                          DCD      ||.data||

                          AREA ||i.Virtual_Com_Port_Status_Out||, CODE, READONLY, ALIGN=1

                  Virtual_Com_Port_Status_Out PROC
;;;248    *******************************************************************************/
;;;249    void Virtual_Com_Port_Status_Out(void)
000000  4770              BX       lr
;;;250    {}
;;;251    
                          ENDP


                          AREA ||i.Virtual_Com_Port_init||, CODE, READONLY, ALIGN=2

                  Virtual_Com_Port_init PROC
;;;120    *******************************************************************************/
;;;121    void Virtual_Com_Port_init(void)
000000  b510              PUSH     {r4,lr}
;;;122    {
;;;123    
;;;124      /* Update the serial number string descriptor with the data from the unique
;;;125      ID*/
;;;126      Get_SerialNum();
000002  f7fffffe          BL       Get_SerialNum
;;;127    
;;;128      pInformation->Current_Configuration = 0;
000006  4806              LDR      r0,|L14.32|
000008  2400              MOVS     r4,#0
00000a  6800              LDR      r0,[r0,#0]  ; pInformation
00000c  7284              STRB     r4,[r0,#0xa]
;;;129    
;;;130      /* Connect the device */
;;;131      PowerOn();
00000e  f7fffffe          BL       PowerOn
;;;132    
;;;133      /* Perform basic device initialization operations */
;;;134      USB_SIL_Init();
000012  f7fffffe          BL       USB_SIL_Init
;;;135    
;;;136      /* configure the USART to the default settings */
;;;137      USART_Config_Default();
000016  f7fffffe          BL       USART_Config_Default
;;;138    
;;;139      bDeviceState = UNCONNECTED;
00001a  4802              LDR      r0,|L14.36|
00001c  6004              STR      r4,[r0,#0]  ; bDeviceState
;;;140    }
00001e  bd10              POP      {r4,pc}
;;;141    
                          ENDP

                  |L14.32|
                          DCD      pInformation
                  |L14.36|
                          DCD      bDeviceState

                          AREA ||.data||, DATA, ALIGN=2

                  Request
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  linecoding
                          DCD      0x0001c200
000008  00000800          DCB      0x00,0x00,0x08,0x00
                  Device_Descriptor
                          DCD      Virtual_Com_Port_DeviceDescriptor
000010  0012              DCW      0x0012
000012  0000              DCB      0x00,0x00
                  Config_Descriptor
                          DCD      Virtual_Com_Port_ConfigDescriptor
000018  0043              DCW      0x0043
00001a  0000              DCB      0x00,0x00
                  Device_Property
                          DCD      Virtual_Com_Port_init
                          DCD      Virtual_Com_Port_Reset
                          DCD      Virtual_Com_Port_Status_In
                          DCD      Virtual_Com_Port_Status_Out
                          DCD      Virtual_Com_Port_Data_Setup
                          DCD      Virtual_Com_Port_NoData_Setup
                          DCD      Virtual_Com_Port_Get_Interface_Setting
                          DCD      Virtual_Com_Port_GetDeviceDescriptor
                          DCD      Virtual_Com_Port_GetConfigDescriptor
                          DCD      Virtual_Com_Port_GetStringDescriptor
                          DCD      0x00000000
000048  40000000          DCB      0x40,0x00,0x00,0x00
                  String_Descriptor
                          DCD      Virtual_Com_Port_StringLangID
000050  0004              DCW      0x0004
000052  0000              DCB      0x00,0x00
                          DCD      Virtual_Com_Port_StringVendor
000058  0026              DCW      0x0026
00005a  0000              DCB      0x00,0x00
                          DCD      Virtual_Com_Port_StringProduct
000060  0032              DCW      0x0032
000062  0000              DCB      0x00,0x00
                          DCD      Virtual_Com_Port_StringSerial
000068  001a              DCW      0x001a
00006a  0000              DCB      0x00,0x00

                          AREA ||area_number.18||, DATA, ALIGN=0

                          EXPORTAS ||area_number.18||, ||.data||
                  Device_Table
000000  0401              DCB      0x04,0x01

                          AREA ||area_number.19||, DATA, ALIGN=2

                          EXPORTAS ||area_number.19||, ||.data||
                  User_Standard_Requests
                          DCD      NOP_Process
                          DCD      Virtual_Com_Port_SetConfiguration
                          DCD      NOP_Process
                          DCD      NOP_Process
                          DCD      NOP_Process
                          DCD      NOP_Process
                          DCD      NOP_Process
                          DCD      NOP_Process
                          DCD      Virtual_Com_Port_SetDeviceAddress
