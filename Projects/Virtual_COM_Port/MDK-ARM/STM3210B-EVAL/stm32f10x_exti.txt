; generated by ARM C/C++ Compiler, RVCT4.0 [Build 728]
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\STM3210B-EVAL\stm32f10x_exti.o --depend=.\STM3210B-EVAL\stm32f10x_exti.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\inc -I..\..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\Utilities\STM32_EVAL\STM3210B_EVAL -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_MD -DUSE_STM3210B_EVAL --omf_browse=.\STM3210B-EVAL\stm32f10x_exti.crf ..\..\..\Libraries\STM32F10x_StdPeriph_Driver\src\stm32f10x_exti.c]
                          THUMB

                          AREA ||i.EXTI_ClearFlag||, CODE, READONLY, ALIGN=2

                  EXTI_ClearFlag PROC
;;;214      */
;;;215    void EXTI_ClearFlag(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L1.8|
;;;216    {
;;;217      /* Check the parameters */
;;;218      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;219      
;;;220      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;221    }
000004  4770              BX       lr
;;;222    
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      0x40010414

                          AREA ||i.EXTI_ClearITPendingBit||, CODE, READONLY, ALIGN=2

                  EXTI_ClearITPendingBit PROC
;;;254      */
;;;255    void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L2.8|
;;;256    {
;;;257      /* Check the parameters */
;;;258      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;259      
;;;260      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;261    }
000004  4770              BX       lr
;;;262    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      0x40010414

                          AREA ||i.EXTI_DeInit||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;90       */
;;;91     void EXTI_DeInit(void)
000000  4804              LDR      r0,|L3.20|
;;;92     {
;;;93       EXTI->IMR = 0x00000000;
000002  2100              MOVS     r1,#0
000004  6001              STR      r1,[r0,#0]
;;;94       EXTI->EMR = 0x00000000;
000006  6041              STR      r1,[r0,#4]
;;;95       EXTI->RTSR = 0x00000000; 
000008  6081              STR      r1,[r0,#8]
;;;96       EXTI->FTSR = 0x00000000; 
00000a  60c1              STR      r1,[r0,#0xc]
;;;97       EXTI->PR = 0x000FFFFF;
00000c  4902              LDR      r1,|L3.24|
00000e  6141              STR      r1,[r0,#0x14]
;;;98     }
000010  4770              BX       lr
;;;99     
                          ENDP

000012  0000              DCW      0x0000
                  |L3.20|
                          DCD      0x40010400
                  |L3.24|
                          DCD      0x000fffff

                          AREA ||i.EXTI_GenerateSWInterrupt||, CODE, READONLY, ALIGN=2

                  EXTI_GenerateSWInterrupt PROC
;;;176      */
;;;177    void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
000000  4902              LDR      r1,|L4.12|
;;;178    {
;;;179      /* Check the parameters */
;;;180      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;181      
;;;182      EXTI->SWIER |= EXTI_Line;
000002  680a              LDR      r2,[r1,#0]
000004  ea420200          ORR      r2,r2,r0
000008  600a              STR      r2,[r1,#0]
;;;183    }
00000a  4770              BX       lr
;;;184    
                          ENDP

                  |L4.12|
                          DCD      0x40010410

                          AREA ||i.EXTI_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetFlagStatus PROC
;;;191      */
;;;192    FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
000000  4903              LDR      r1,|L5.16|
;;;193    {
000002  4602              MOV      r2,r0
;;;194      FlagStatus bitstatus = RESET;
;;;195      /* Check the parameters */
;;;196      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;197      
;;;198      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
000004  6809              LDR      r1,[r1,#0]
000006  2000              MOVS     r0,#0                 ;194
000008  4211              TST      r1,r2
00000a  d000              BEQ      |L5.14|
;;;199      {
;;;200        bitstatus = SET;
00000c  2001              MOVS     r0,#1
                  |L5.14|
;;;201      }
;;;202      else
;;;203      {
;;;204        bitstatus = RESET;
;;;205      }
;;;206      return bitstatus;
;;;207    }
00000e  4770              BX       lr
;;;208    
                          ENDP

                  |L5.16|
                          DCD      0x40010414

                          AREA ||i.EXTI_GetITStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetITStatus PROC
;;;229      */
;;;230    ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
000000  4b06              LDR      r3,|L6.28|
;;;231    {
000002  4601              MOV      r1,r0
;;;232      ITStatus bitstatus = RESET;
;;;233      uint32_t enablestatus = 0;
;;;234      /* Check the parameters */
;;;235      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;236      
;;;237      enablestatus =  EXTI->IMR & EXTI_Line;
000004  681a              LDR      r2,[r3,#0]
000006  2000              MOVS     r0,#0                 ;232
;;;238      if (((EXTI->PR & EXTI_Line) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
000008  695b              LDR      r3,[r3,#0x14]
00000a  ea020201          AND      r2,r2,r1              ;237
00000e  420b              TST      r3,r1
000010  d002              BEQ      |L6.24|
000012  2a00              CMP      r2,#0
000014  d000              BEQ      |L6.24|
;;;239      {
;;;240        bitstatus = SET;
000016  2001              MOVS     r0,#1
                  |L6.24|
;;;241      }
;;;242      else
;;;243      {
;;;244        bitstatus = RESET;
;;;245      }
;;;246      return bitstatus;
;;;247    }
000018  4770              BX       lr
;;;248    
                          ENDP

00001a  0000              DCW      0x0000
                  |L6.28|
                          DCD      0x40010400

                          AREA ||i.EXTI_Init||, CODE, READONLY, ALIGN=2

                  EXTI_Init PROC
;;;106      */
;;;107    void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
000000  b530              PUSH     {r4,r5,lr}
;;;108    {
;;;109      uint32_t tmp = 0;
;;;110    
;;;111      /* Check the parameters */
;;;112      assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
;;;113      assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
;;;114      assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
;;;115      assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
;;;116    
;;;117      tmp = (uint32_t)EXTI_BASE;
000002  4a1f              LDR      r2,|L7.128|
;;;118         
;;;119      if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
000004  7981              LDRB     r1,[r0,#6]
000006  6803              LDR      r3,[r0,#0]
000008  b399              CBZ      r1,|L7.114|
00000a  4611              MOV      r1,r2
;;;120      {
;;;121        /* Clear EXTI line configuration */
;;;122        EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
00000c  680c              LDR      r4,[r1,#0]
00000e  ea240403          BIC      r4,r4,r3
000012  600c              STR      r4,[r1,#0]
;;;123        EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
000014  684b              LDR      r3,[r1,#4]
000016  6804              LDR      r4,[r0,#0]
000018  ea230304          BIC      r3,r3,r4
00001c  604b              STR      r3,[r1,#4]
;;;124        
;;;125        tmp += EXTI_InitStruct->EXTI_Mode;
00001e  7904              LDRB     r4,[r0,#4]
000020  eb040302          ADD      r3,r4,r2
;;;126    
;;;127        *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000024  681c              LDR      r4,[r3,#0]
000026  6805              LDR      r5,[r0,#0]
000028  ea440405          ORR      r4,r4,r5
00002c  601c              STR      r4,[r3,#0]
;;;128    
;;;129        /* Clear Rising Falling edge configuration */
;;;130        EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
00002e  688b              LDR      r3,[r1,#8]
000030  6804              LDR      r4,[r0,#0]
000032  ea230304          BIC      r3,r3,r4
000036  608b              STR      r3,[r1,#8]
;;;131        EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
000038  68cb              LDR      r3,[r1,#0xc]
00003a  6804              LDR      r4,[r0,#0]
00003c  ea230304          BIC      r3,r3,r4
000040  60cb              STR      r3,[r1,#0xc]
;;;132        
;;;133        /* Select the trigger for the selected external interrupts */
;;;134        if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
000042  7943              LDRB     r3,[r0,#5]
000044  f5a16180          SUB      r1,r1,#0x400          ;131
000048  2b10              CMP      r3,#0x10
00004a  d10c              BNE      |L7.102|
00004c  f5016181          ADD      r1,r1,#0x408
;;;135        {
;;;136          /* Rising Falling edge */
;;;137          EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
000050  680a              LDR      r2,[r1,#0]
000052  6803              LDR      r3,[r0,#0]
000054  ea420203          ORR      r2,r2,r3
000058  600a              STR      r2,[r1,#0]
;;;138          EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
00005a  684a              LDR      r2,[r1,#4]
00005c  6800              LDR      r0,[r0,#0]
00005e  ea420200          ORR      r2,r2,r0
000062  604a              STR      r2,[r1,#4]
;;;139        }
;;;140        else
;;;141        {
;;;142          tmp = (uint32_t)EXTI_BASE;
;;;143          tmp += EXTI_InitStruct->EXTI_Trigger;
;;;144    
;;;145          *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
;;;146        }
;;;147      }
;;;148      else
;;;149      {
;;;150        tmp += EXTI_InitStruct->EXTI_Mode;
;;;151    
;;;152        /* Disable the selected external lines */
;;;153        *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
;;;154      }
;;;155    }
000064  bd30              POP      {r4,r5,pc}
                  |L7.102|
000066  1899              ADDS     r1,r3,r2              ;143
000068  680a              LDR      r2,[r1,#0]            ;145
00006a  6800              LDR      r0,[r0,#0]            ;145
00006c  4302              ORRS     r2,r2,r0              ;145
00006e  600a              STR      r2,[r1,#0]            ;145
                  |L7.112|
000070  bd30              POP      {r4,r5,pc}
                  |L7.114|
000072  e7ff              B        |L7.116|
                  |L7.116|
000074  7900              LDRB     r0,[r0,#4]            ;150
000076  4410              ADD      r0,r0,r2              ;150
000078  6801              LDR      r1,[r0,#0]            ;153
00007a  4399              BICS     r1,r1,r3              ;153
00007c  6001              STR      r1,[r0,#0]            ;153
00007e  e7f7              B        |L7.112|
;;;156    
                          ENDP

                  |L7.128|
                          DCD      0x40010400

                          AREA ||i.EXTI_StructInit||, CODE, READONLY, ALIGN=1

                  EXTI_StructInit PROC
;;;162      */
;;;163    void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;164    {
;;;165      EXTI_InitStruct->EXTI_Line = EXTI_LINENONE;
;;;166      EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
000002  6001              STR      r1,[r0,#0]
000004  7101              STRB     r1,[r0,#4]
;;;167      EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
000006  220c              MOVS     r2,#0xc
000008  7142              STRB     r2,[r0,#5]
;;;168      EXTI_InitStruct->EXTI_LineCmd = DISABLE;
00000a  7181              STRB     r1,[r0,#6]
;;;169    }
00000c  4770              BX       lr
;;;170    
                          ENDP

