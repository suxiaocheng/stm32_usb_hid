; generated by ARM C/C++ Compiler, RVCT4.0 [Build 728]
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\STM3210B-EVAL\usb_regs.o --depend=.\STM3210B-EVAL\usb_regs.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\inc -I..\..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\Utilities\STM32_EVAL\STM3210B_EVAL -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_MD -DUSE_STM3210B_EVAL --omf_browse=.\STM3210B-EVAL\usb_regs.crf ..\..\..\Libraries\STM32_USB-FS-Device_Driver\src\usb_regs.c]
                          THUMB

                          AREA ||i.ByteSwap||, CODE, READONLY, ALIGN=1

                  ByteSwap PROC
;;;750    *******************************************************************************/
;;;751    uint16_t ByteSwap(uint16_t wSwW)
000000  b2c1              UXTB     r1,r0
;;;752    {
;;;753      uint8_t bTemp;
;;;754      uint16_t wRet;
;;;755      bTemp = (uint8_t)(wSwW & 0xff);
;;;756      wRet =  (wSwW >> 8) | ((uint16_t)bTemp << 8);
000002  0a00              LSRS     r0,r0,#8
000004  ea402001          ORR      r0,r0,r1,LSL #8
;;;757      return(wRet);
;;;758    }
000008  4770              BX       lr
;;;759    
                          ENDP


                          AREA ||i.ClearDTOG_RX||, CODE, READONLY, ALIGN=2

                  ClearDTOG_RX PROC
;;;432    *******************************************************************************/
;;;433    void ClearDTOG_RX(uint8_t bEpNum)
000000  4909              LDR      r1,|L2.40|
;;;434    {
;;;435      _ClearDTOG_RX(bEpNum);
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  f8d01c00          LDR      r1,[r0,#0xc00]
00000a  0449              LSLS     r1,r1,#17
00000c  d50a              BPL      |L2.36|
00000e  f8d01c00          LDR      r1,[r0,#0xc00]
000012  f648738f          MOV      r3,#0x8f8f
000016  b289              UXTH     r1,r1
000018  f24c0280          MOV      r2,#0xc080
00001c  4019              ANDS     r1,r1,r3
00001e  4311              ORRS     r1,r1,r2
000020  f8c01c00          STR      r1,[r0,#0xc00]
                  |L2.36|
;;;436    }
000024  4770              BX       lr
;;;437    /*******************************************************************************
                          ENDP

000026  0000              DCW      0x0000
                  |L2.40|
                          DCD      0x40005000

                          AREA ||i.ClearDTOG_TX||, CODE, READONLY, ALIGN=2

                  ClearDTOG_TX PROC
;;;443    *******************************************************************************/
;;;444    void ClearDTOG_TX(uint8_t bEpNum)
000000  4909              LDR      r1,|L3.40|
;;;445    {
;;;446      _ClearDTOG_TX(bEpNum);
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  f8d01c00          LDR      r1,[r0,#0xc00]
00000a  0649              LSLS     r1,r1,#25
00000c  d50a              BPL      |L3.36|
00000e  f8d01c00          LDR      r1,[r0,#0xc00]
000012  f648738f          MOV      r3,#0x8f8f
000016  b289              UXTH     r1,r1
000018  f24802c0          MOV      r2,#0x80c0
00001c  4019              ANDS     r1,r1,r3
00001e  4311              ORRS     r1,r1,r2
000020  f8c01c00          STR      r1,[r0,#0xc00]
                  |L3.36|
;;;447    }
000024  4770              BX       lr
;;;448    /*******************************************************************************
                          ENDP

000026  0000              DCW      0x0000
                  |L3.40|
                          DCD      0x40005000

                          AREA ||i.ClearEPDoubleBuff||, CODE, READONLY, ALIGN=2

                  ClearEPDoubleBuff PROC
;;;355    *******************************************************************************/
;;;356    void ClearEPDoubleBuff(uint8_t bEpNum)
000000  4907              LDR      r1,|L4.32|
;;;357    {
;;;358      _ClearEP_KIND(bEpNum);
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  f8d01c00          LDR      r1,[r0,#0xc00]
00000a  f648638f          MOV      r3,#0x8e8f
00000e  b289              UXTH     r1,r1
000010  f2480280          MOV      r2,#0x8080
000014  4019              ANDS     r1,r1,r3
000016  4311              ORRS     r1,r1,r2
000018  f8c01c00          STR      r1,[r0,#0xc00]
;;;359    }
00001c  4770              BX       lr
;;;360    /*******************************************************************************
                          ENDP

00001e  0000              DCW      0x0000
                  |L4.32|
                          DCD      0x40005000

                          AREA ||i.ClearEP_CTR_RX||, CODE, READONLY, ALIGN=2

                  ClearEP_CTR_RX PROC
;;;388    *******************************************************************************/
;;;389    void ClearEP_CTR_RX(uint8_t bEpNum)
000000  4905              LDR      r1,|L5.24|
;;;390    {
;;;391      _ClearEP_CTR_RX(bEpNum);
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  f8d01c00          LDR      r1,[r0,#0xc00]
00000a  f640728f          MOV      r2,#0xf8f
00000e  b289              UXTH     r1,r1
000010  4011              ANDS     r1,r1,r2
000012  f8c01c00          STR      r1,[r0,#0xc00]
;;;392    }
000016  4770              BX       lr
;;;393    /*******************************************************************************
                          ENDP

                  |L5.24|
                          DCD      0x40005000

                          AREA ||i.ClearEP_CTR_TX||, CODE, READONLY, ALIGN=2

                  ClearEP_CTR_TX PROC
;;;399    *******************************************************************************/
;;;400    void ClearEP_CTR_TX(uint8_t bEpNum)
000000  4905              LDR      r1,|L6.24|
;;;401    {
;;;402      _ClearEP_CTR_TX(bEpNum);
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  f8d01c00          LDR      r1,[r0,#0xc00]
00000a  f648720f          MOV      r2,#0x8f0f
00000e  b289              UXTH     r1,r1
000010  4011              ANDS     r1,r1,r2
000012  f8c01c00          STR      r1,[r0,#0xc00]
;;;403    }
000016  4770              BX       lr
;;;404    /*******************************************************************************
                          ENDP

                  |L6.24|
                          DCD      0x40005000

                          AREA ||i.ClearEP_KIND||, CODE, READONLY, ALIGN=2

                  ClearEP_KIND PROC
;;;311    *******************************************************************************/
;;;312    void ClearEP_KIND(uint8_t bEpNum)
000000  4907              LDR      r1,|L7.32|
;;;313    {
;;;314      _ClearEP_KIND(bEpNum);
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  f8d01c00          LDR      r1,[r0,#0xc00]
00000a  f648638f          MOV      r3,#0x8e8f
00000e  b289              UXTH     r1,r1
000010  f2480280          MOV      r2,#0x8080
000014  4019              ANDS     r1,r1,r3
000016  4311              ORRS     r1,r1,r2
000018  f8c01c00          STR      r1,[r0,#0xc00]
;;;315    }
00001c  4770              BX       lr
;;;316    /*******************************************************************************
                          ENDP

00001e  0000              DCW      0x0000
                  |L7.32|
                          DCD      0x40005000

                          AREA ||i.Clear_Status_Out||, CODE, READONLY, ALIGN=2

                  Clear_Status_Out PROC
;;;322    *******************************************************************************/
;;;323    void Clear_Status_Out(uint8_t bEpNum)
000000  4907              LDR      r1,|L8.32|
;;;324    {
;;;325      _ClearEP_KIND(bEpNum);
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  f8d01c00          LDR      r1,[r0,#0xc00]
00000a  f648638f          MOV      r3,#0x8e8f
00000e  b289              UXTH     r1,r1
000010  f2480280          MOV      r2,#0x8080
000014  4019              ANDS     r1,r1,r3
000016  4311              ORRS     r1,r1,r2
000018  f8c01c00          STR      r1,[r0,#0xc00]
;;;326    }
00001c  4770              BX       lr
;;;327    /*******************************************************************************
                          ENDP

00001e  0000              DCW      0x0000
                  |L8.32|
                          DCD      0x40005000

                          AREA ||i.FreeUserBuffer||, CODE, READONLY, ALIGN=2

                  FreeUserBuffer PROC
;;;718    *******************************************************************************/
;;;719    void FreeUserBuffer(uint8_t bEpNum, uint8_t bDir)
000000  4b0b              LDR      r3,|L9.48|
;;;720    {
;;;721      if (bDir == EP_DBUF_OUT)
;;;722      { /* OUT double buffered endpoint */
;;;723        _ToggleDTOG_TX(bEpNum);
000002  f648728f          MOV      r2,#0x8f8f
000006  eb030080          ADD      r0,r3,r0,LSL #2
00000a  2901              CMP      r1,#1                 ;721
00000c  d104              BNE      |L9.24|
00000e  f8d01c00          LDR      r1,[r0,#0xc00]
000012  f24803c0          MOV      r3,#0x80c0
000016  e005              B        |L9.36|
                  |L9.24|
;;;724      }
;;;725      else if (bDir == EP_DBUF_IN)
000018  2902              CMP      r1,#2
00001a  d108              BNE      |L9.46|
;;;726      { /* IN double buffered endpoint */
;;;727        _ToggleDTOG_RX(bEpNum);
00001c  f8d01c00          LDR      r1,[r0,#0xc00]
000020  f24c0380          MOV      r3,#0xc080
                  |L9.36|
000024  b289              UXTH     r1,r1                 ;723
000026  4011              ANDS     r1,r1,r2              ;723
000028  4319              ORRS     r1,r1,r3              ;723
00002a  f8c01c00          STR      r1,[r0,#0xc00]        ;723
                  |L9.46|
;;;728      }
;;;729    }
00002e  4770              BX       lr
;;;730    
                          ENDP

                  |L9.48|
                          DCD      0x40005000

                          AREA ||i.GetBTABLE||, CODE, READONLY, ALIGN=2

                  GetBTABLE PROC
;;;141    *******************************************************************************/
;;;142    uint16_t GetBTABLE(void)
000000  4801              LDR      r0,|L10.8|
;;;143    {
;;;144      return(_GetBTABLE());
000002  6800              LDR      r0,[r0,#0]
000004  b280              UXTH     r0,r0
;;;145    }
000006  4770              BX       lr
;;;146    
                          ENDP

                  |L10.8|
                          DCD      0x40005c50

                          AREA ||i.GetCNTR||, CODE, READONLY, ALIGN=2

                  GetCNTR PROC
;;;57     *******************************************************************************/
;;;58     uint16_t GetCNTR(void)
000000  4801              LDR      r0,|L11.8|
;;;59     {
;;;60       return(_GetCNTR());
000002  6800              LDR      r0,[r0,#0]
000004  b280              UXTH     r0,r0
;;;61     }
000006  4770              BX       lr
;;;62     
                          ENDP

                  |L11.8|
                          DCD      0x40005c40

                          AREA ||i.GetDADDR||, CODE, READONLY, ALIGN=2

                  GetDADDR PROC
;;;117    *******************************************************************************/
;;;118    uint16_t GetDADDR(void)
000000  4801              LDR      r0,|L12.8|
;;;119    {
;;;120      return(_GetDADDR());
000002  6800              LDR      r0,[r0,#0]
000004  b280              UXTH     r0,r0
;;;121    }
000006  4770              BX       lr
;;;122    
                          ENDP

                  |L12.8|
                          DCD      0x40005c4c

                          AREA ||i.GetENDPOINT||, CODE, READONLY, ALIGN=2

                  GetENDPOINT PROC
;;;166    *******************************************************************************/
;;;167    uint16_t GetENDPOINT(uint8_t bEpNum)
000000  4903              LDR      r1,|L13.16|
;;;168    {
;;;169      return(_GetENDPOINT(bEpNum));
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  f8d00c00          LDR      r0,[r0,#0xc00]
00000a  b280              UXTH     r0,r0
;;;170    }
00000c  4770              BX       lr
;;;171    
                          ENDP

00000e  0000              DCW      0x0000
                  |L13.16|
                          DCD      0x40005000

                          AREA ||i.GetEPAddress||, CODE, READONLY, ALIGN=2

                  GetEPAddress PROC
;;;466    *******************************************************************************/
;;;467    uint8_t GetEPAddress(uint8_t bEpNum)
000000  4903              LDR      r1,|L14.16|
;;;468    {
;;;469      return(_GetEPAddress(bEpNum));
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  f8d00c00          LDR      r0,[r0,#0xc00]
00000a  f3c00003          UBFX     r0,r0,#0,#4
;;;470    }
00000e  4770              BX       lr
;;;471    /*******************************************************************************
                          ENDP

                  |L14.16|
                          DCD      0x40005000

                          AREA ||i.GetEPDblBuf0Addr||, CODE, READONLY, ALIGN=2

                  GetEPDblBuf0Addr PROC
;;;618    *******************************************************************************/
;;;619    uint16_t GetEPDblBuf0Addr(uint8_t bEpNum)
000000  4904              LDR      r1,|L15.20|
;;;620    {
;;;621      return(_GetEPDblBuf0Addr(bEpNum));
000002  6809              LDR      r1,[r1,#0]
000004  b289              UXTH     r1,r1
000006  eb0100c0          ADD      r0,r1,r0,LSL #3
00000a  4903              LDR      r1,|L15.24|
00000c  f8510010          LDR      r0,[r1,r0,LSL #1]
000010  b280              UXTH     r0,r0
;;;622    }
000012  4770              BX       lr
;;;623    /*******************************************************************************
                          ENDP

                  |L15.20|
                          DCD      0x40005c50
                  |L15.24|
                          DCD      0x40006000

                          AREA ||i.GetEPDblBuf0Count||, CODE, READONLY, ALIGN=2

                  GetEPDblBuf0Count PROC
;;;677    *******************************************************************************/
;;;678    uint16_t GetEPDblBuf0Count(uint8_t bEpNum)
000000  4905              LDR      r1,|L16.24|
;;;679    {
;;;680      return(_GetEPDblBuf0Count(bEpNum));
000002  6809              LDR      r1,[r1,#0]
000004  b289              UXTH     r1,r1
000006  eb0100c0          ADD      r0,r1,r0,LSL #3
00000a  4904              LDR      r1,|L16.28|
00000c  eb010040          ADD      r0,r1,r0,LSL #1
000010  6840              LDR      r0,[r0,#4]
000012  f3c00009          UBFX     r0,r0,#0,#10
;;;681    }
000016  4770              BX       lr
;;;682    /*******************************************************************************
                          ENDP

                  |L16.24|
                          DCD      0x40005c50
                  |L16.28|
                          DCD      0x40006000

                          AREA ||i.GetEPDblBuf1Addr||, CODE, READONLY, ALIGN=2

                  GetEPDblBuf1Addr PROC
;;;629    *******************************************************************************/
;;;630    uint16_t GetEPDblBuf1Addr(uint8_t bEpNum)
000000  4905              LDR      r1,|L17.24|
;;;631    {
;;;632      return(_GetEPDblBuf1Addr(bEpNum));
000002  6809              LDR      r1,[r1,#0]
000004  b289              UXTH     r1,r1
000006  eb0100c0          ADD      r0,r1,r0,LSL #3
00000a  4904              LDR      r1,|L17.28|
00000c  eb010040          ADD      r0,r1,r0,LSL #1
000010  6880              LDR      r0,[r0,#8]
000012  b280              UXTH     r0,r0
;;;633    }
000014  4770              BX       lr
;;;634    /*******************************************************************************
                          ENDP

000016  0000              DCW      0x0000
                  |L17.24|
                          DCD      0x40005c50
                  |L17.28|
                          DCD      0x40006000

                          AREA ||i.GetEPDblBuf1Count||, CODE, READONLY, ALIGN=2

                  GetEPDblBuf1Count PROC
;;;689    *******************************************************************************/
;;;690    uint16_t GetEPDblBuf1Count(uint8_t bEpNum)
000000  4905              LDR      r1,|L18.24|
;;;691    {
;;;692      return(_GetEPDblBuf1Count(bEpNum));
000002  6809              LDR      r1,[r1,#0]
000004  b289              UXTH     r1,r1
000006  eb0100c0          ADD      r0,r1,r0,LSL #3
00000a  4904              LDR      r1,|L18.28|
00000c  eb010040          ADD      r0,r1,r0,LSL #1
000010  68c0              LDR      r0,[r0,#0xc]
000012  f3c00009          UBFX     r0,r0,#0,#10
;;;693    }
000016  4770              BX       lr
;;;694    /*******************************************************************************
                          ENDP

                  |L18.24|
                          DCD      0x40005c50
                  |L18.28|
                          DCD      0x40006000

                          AREA ||i.GetEPDblBufDir||, CODE, READONLY, ALIGN=2

                  GetEPDblBufDir PROC
;;;701    *******************************************************************************/
;;;702    EP_DBUF_DIR GetEPDblBufDir(uint8_t bEpNum)
000000  4a0d              LDR      r2,|L19.56|
;;;703    {
;;;704      if ((uint16_t)(*_pEPRxCount(bEpNum) & 0xFC00) != 0)
000002  f8d23c50          LDR      r3,[r2,#0xc50]
000006  490d              LDR      r1,|L19.60|
000008  b29b              UXTH     r3,r3
00000a  eb0303c0          ADD      r3,r3,r0,LSL #3
00000e  eb010343          ADD      r3,r1,r3,LSL #1
000012  68db              LDR      r3,[r3,#0xc]
000014  f4134f7c          TST      r3,#0xfc00
000018  d001              BEQ      |L19.30|
;;;705        return(EP_DBUF_OUT);
00001a  2001              MOVS     r0,#1
                  |L19.28|
;;;706      else if (((uint16_t)(*_pEPTxCount(bEpNum)) & 0x03FF) != 0)
;;;707        return(EP_DBUF_IN);
;;;708      else
;;;709        return(EP_DBUF_ERR);
;;;710    }
00001c  4770              BX       lr
                  |L19.30|
00001e  f8d22c50          LDR      r2,[r2,#0xc50]        ;706
000022  b292              UXTH     r2,r2                 ;706
000024  eb0200c0          ADD      r0,r2,r0,LSL #3       ;706
000028  eb010040          ADD      r0,r1,r0,LSL #1       ;706
00002c  6840              LDR      r0,[r0,#4]            ;706
00002e  0580              LSLS     r0,r0,#22             ;706
000030  d0f4              BEQ      |L19.28|
000032  2002              MOVS     r0,#2                 ;707
000034  4770              BX       lr
;;;711    /*******************************************************************************
                          ENDP

000036  0000              DCW      0x0000
                  |L19.56|
                          DCD      0x40005000
                  |L19.60|
                          DCD      0x40006000

                          AREA ||i.GetEPRxAddr||, CODE, READONLY, ALIGN=2

                  GetEPRxAddr PROC
;;;512    *******************************************************************************/
;;;513    uint16_t GetEPRxAddr(uint8_t bEpNum)
000000  4905              LDR      r1,|L20.24|
;;;514    {
;;;515      return(_GetEPRxAddr(bEpNum));
000002  6809              LDR      r1,[r1,#0]
000004  b289              UXTH     r1,r1
000006  eb0100c0          ADD      r0,r1,r0,LSL #3
00000a  4904              LDR      r1,|L20.28|
00000c  eb010040          ADD      r0,r1,r0,LSL #1
000010  6880              LDR      r0,[r0,#8]
000012  b280              UXTH     r0,r0
;;;516    }
000014  4770              BX       lr
;;;517    /*******************************************************************************
                          ENDP

000016  0000              DCW      0x0000
                  |L20.24|
                          DCD      0x40005c50
                  |L20.28|
                          DCD      0x40006000

                          AREA ||i.GetEPRxCount||, CODE, READONLY, ALIGN=2

                  GetEPRxCount PROC
;;;570    *******************************************************************************/
;;;571    uint16_t GetEPRxCount(uint8_t bEpNum)
000000  4905              LDR      r1,|L21.24|
;;;572    {
;;;573      return(_GetEPRxCount(bEpNum));
000002  6809              LDR      r1,[r1,#0]
000004  b289              UXTH     r1,r1
000006  eb0100c0          ADD      r0,r1,r0,LSL #3
00000a  4904              LDR      r1,|L21.28|
00000c  eb010040          ADD      r0,r1,r0,LSL #1
000010  68c0              LDR      r0,[r0,#0xc]
000012  f3c00009          UBFX     r0,r0,#0,#10
;;;574    }
000016  4770              BX       lr
;;;575    /*******************************************************************************
                          ENDP

                  |L21.24|
                          DCD      0x40005c50
                  |L21.28|
                          DCD      0x40006000

                          AREA ||i.GetEPRxStatus||, CODE, READONLY, ALIGN=2

                  GetEPRxStatus PROC
;;;263    *******************************************************************************/
;;;264    uint16_t GetEPRxStatus(uint8_t bEpNum)
000000  4904              LDR      r1,|L22.20|
;;;265    {
;;;266      return(_GetEPRxStatus(bEpNum));
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  f8d00c00          LDR      r0,[r0,#0xc00]
00000a  f3c03001          UBFX     r0,r0,#12,#2
00000e  0300              LSLS     r0,r0,#12
;;;267    }
000010  4770              BX       lr
;;;268    
                          ENDP

000012  0000              DCW      0x0000
                  |L22.20|
                          DCD      0x40005000

                          AREA ||i.GetEPTxAddr||, CODE, READONLY, ALIGN=2

                  GetEPTxAddr PROC
;;;501    *******************************************************************************/
;;;502    uint16_t GetEPTxAddr(uint8_t bEpNum)
000000  4904              LDR      r1,|L23.20|
;;;503    {
;;;504      return(_GetEPTxAddr(bEpNum));
000002  6809              LDR      r1,[r1,#0]
000004  b289              UXTH     r1,r1
000006  eb0100c0          ADD      r0,r1,r0,LSL #3
00000a  4903              LDR      r1,|L23.24|
00000c  f8510010          LDR      r0,[r1,r0,LSL #1]
000010  b280              UXTH     r0,r0
;;;505    }
000012  4770              BX       lr
;;;506    /*******************************************************************************
                          ENDP

                  |L23.20|
                          DCD      0x40005c50
                  |L23.24|
                          DCD      0x40006000

                          AREA ||i.GetEPTxCount||, CODE, READONLY, ALIGN=2

                  GetEPTxCount PROC
;;;559    *******************************************************************************/
;;;560    uint16_t GetEPTxCount(uint8_t bEpNum)
000000  4905              LDR      r1,|L24.24|
;;;561    {
;;;562      return(_GetEPTxCount(bEpNum));
000002  6809              LDR      r1,[r1,#0]
000004  b289              UXTH     r1,r1
000006  eb0100c0          ADD      r0,r1,r0,LSL #3
00000a  4904              LDR      r1,|L24.28|
00000c  eb010040          ADD      r0,r1,r0,LSL #1
000010  6840              LDR      r0,[r0,#4]
000012  f3c00009          UBFX     r0,r0,#0,#10
;;;563    }
000016  4770              BX       lr
;;;564    /*******************************************************************************
                          ENDP

                  |L24.24|
                          DCD      0x40005c50
                  |L24.28|
                          DCD      0x40006000

                          AREA ||i.GetEPTxStatus||, CODE, READONLY, ALIGN=2

                  GetEPTxStatus PROC
;;;251    *******************************************************************************/
;;;252    uint16_t GetEPTxStatus(uint8_t bEpNum)
000000  4904              LDR      r1,|L25.20|
;;;253    {
;;;254      return(_GetEPTxStatus(bEpNum));
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  f8d00c00          LDR      r0,[r0,#0xc00]
00000a  f3c01001          UBFX     r0,r0,#4,#2
00000e  0100              LSLS     r0,r0,#4
;;;255    }
000010  4770              BX       lr
;;;256    
                          ENDP

000012  0000              DCW      0x0000
                  |L25.20|
                          DCD      0x40005000

                          AREA ||i.GetEPType||, CODE, READONLY, ALIGN=2

                  GetEPType PROC
;;;191    *******************************************************************************/
;;;192    uint16_t GetEPType(uint8_t bEpNum)
000000  4904              LDR      r1,|L26.20|
;;;193    {
;;;194      return(_GetEPType(bEpNum));
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  f8d00c00          LDR      r0,[r0,#0xc00]
00000a  f3c02041          UBFX     r0,r0,#9,#2
00000e  0240              LSLS     r0,r0,#9
;;;195    }
000010  4770              BX       lr
;;;196    
                          ENDP

000012  0000              DCW      0x0000
                  |L26.20|
                          DCD      0x40005000

                          AREA ||i.GetFNR||, CODE, READONLY, ALIGN=2

                  GetFNR PROC
;;;93     *******************************************************************************/
;;;94     uint16_t GetFNR(void)
000000  4801              LDR      r0,|L27.8|
;;;95     {
;;;96       return(_GetFNR());
000002  6800              LDR      r0,[r0,#0]
000004  b280              UXTH     r0,r0
;;;97     }
000006  4770              BX       lr
;;;98     
                          ENDP

                  |L27.8|
                          DCD      0x40005c48

                          AREA ||i.GetISTR||, CODE, READONLY, ALIGN=2

                  GetISTR PROC
;;;81     *******************************************************************************/
;;;82     uint16_t GetISTR(void)
000000  4801              LDR      r0,|L28.8|
;;;83     {
;;;84       return(_GetISTR());
000002  6800              LDR      r0,[r0,#0]
000004  b280              UXTH     r0,r0
;;;85     }
000006  4770              BX       lr
;;;86     
                          ENDP

                  |L28.8|
                          DCD      0x40005c44

                          AREA ||i.GetRxStallStatus||, CODE, READONLY, ALIGN=2

                  GetRxStallStatus PROC
;;;377    *******************************************************************************/
;;;378    uint16_t GetRxStallStatus(uint8_t bEpNum)
000000  4905              LDR      r1,|L29.24|
;;;379    {
;;;380      return(_GetRxStallStatus(bEpNum));
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  f8d00c00          LDR      r0,[r0,#0xc00]
00000a  f3c03001          UBFX     r0,r0,#12,#2
00000e  2801              CMP      r0,#1
000010  d000              BEQ      |L29.20|
000012  2000              MOVS     r0,#0
                  |L29.20|
;;;381    }
000014  4770              BX       lr
;;;382    /*******************************************************************************
                          ENDP

000016  0000              DCW      0x0000
                  |L29.24|
                          DCD      0x40005000

                          AREA ||i.GetTxStallStatus||, CODE, READONLY, ALIGN=2

                  GetTxStallStatus PROC
;;;366    *******************************************************************************/
;;;367    uint16_t GetTxStallStatus(uint8_t bEpNum)
000000  4905              LDR      r1,|L30.24|
;;;368    {
;;;369      return(_GetTxStallStatus(bEpNum));
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  f8d00c00          LDR      r0,[r0,#0xc00]
00000a  f3c01001          UBFX     r0,r0,#4,#2
00000e  2801              CMP      r0,#1
000010  d000              BEQ      |L30.20|
000012  2000              MOVS     r0,#0
                  |L30.20|
;;;370    }
000014  4770              BX       lr
;;;371    /*******************************************************************************
                          ENDP

000016  0000              DCW      0x0000
                  |L30.24|
                          DCD      0x40005000

                          AREA ||i.SetBTABLE||, CODE, READONLY, ALIGN=2

                  SetBTABLE PROC
;;;129    *******************************************************************************/
;;;130    void SetBTABLE(uint16_t wRegValue)
000000  4902              LDR      r1,|L31.12|
;;;131    {
;;;132      _SetBTABLE(wRegValue);
000002  f0200007          BIC      r0,r0,#7
000006  6008              STR      r0,[r1,#0]
;;;133    }
000008  4770              BX       lr
;;;134    
                          ENDP

00000a  0000              DCW      0x0000
                  |L31.12|
                          DCD      0x40005c50

                          AREA ||i.SetCNTR||, CODE, READONLY, ALIGN=2

                  SetCNTR PROC
;;;45     *******************************************************************************/
;;;46     void SetCNTR(uint16_t wRegValue)
000000  4901              LDR      r1,|L32.8|
;;;47     {
;;;48       _SetCNTR(wRegValue);
000002  6008              STR      r0,[r1,#0]
;;;49     }
000004  4770              BX       lr
;;;50     
                          ENDP

000006  0000              DCW      0x0000
                  |L32.8|
                          DCD      0x40005c40

                          AREA ||i.SetDADDR||, CODE, READONLY, ALIGN=2

                  SetDADDR PROC
;;;105    *******************************************************************************/
;;;106    void SetDADDR(uint16_t wRegValue)
000000  4901              LDR      r1,|L33.8|
;;;107    {
;;;108      _SetDADDR(wRegValue);
000002  6008              STR      r0,[r1,#0]
;;;109    }
000004  4770              BX       lr
;;;110    
                          ENDP

000006  0000              DCW      0x0000
                  |L33.8|
                          DCD      0x40005c4c

                          AREA ||i.SetDouBleBuffEPStall||, CODE, READONLY, ALIGN=2

                  SetDouBleBuffEPStall PROC
;;;230    *******************************************************************************/
;;;231    void SetDouBleBuffEPStall(uint8_t bEpNum, uint8_t bDir)
000000  b500              PUSH     {lr}
;;;232    {
000002  4603              MOV      r3,r0
000004  460a              MOV      r2,r1
;;;233      uint16_t Endpoint_DTOG_Status;
;;;234      Endpoint_DTOG_Status = GetENDPOINT(bEpNum);
000006  f7fffffe          BL       GetENDPOINT
;;;235      if (bDir == EP_DBUF_OUT)
;;;236      { /* OUT double buffered endpoint */
;;;237        _SetENDPOINT(bEpNum, Endpoint_DTOG_Status & ~EPRX_DTOG1);
00000a  4907              LDR      r1,|L34.40|
00000c  2a01              CMP      r2,#1                 ;235
00000e  eb010183          ADD      r1,r1,r3,LSL #2
000012  d102              BNE      |L34.26|
000014  f4205080          BIC      r0,r0,#0x1000
000018  e003              B        |L34.34|
                  |L34.26|
;;;238      }
;;;239      else if (bDir == EP_DBUF_IN)
00001a  2a02              CMP      r2,#2
00001c  d103              BNE      |L34.38|
;;;240      { /* IN double buffered endpoint */
;;;241        _SetENDPOINT(bEpNum, Endpoint_DTOG_Status & ~EPTX_DTOG1);
00001e  f0200010          BIC      r0,r0,#0x10
                  |L34.34|
000022  f8c10c00          STR      r0,[r1,#0xc00]        ;237
                  |L34.38|
;;;242      }
;;;243    }
000026  bd00              POP      {pc}
;;;244    
                          ENDP

                  |L34.40|
                          DCD      0x40005000

                          AREA ||i.SetENDPOINT||, CODE, READONLY, ALIGN=2

                  SetENDPOINT PROC
;;;154    *******************************************************************************/
;;;155    void SetENDPOINT(uint8_t bEpNum, uint16_t wRegValue)
000000  4a02              LDR      r2,|L35.12|
;;;156    {
;;;157      _SetENDPOINT(bEpNum, wRegValue);
000002  eb020080          ADD      r0,r2,r0,LSL #2
000006  f8c01c00          STR      r1,[r0,#0xc00]
;;;158    }
00000a  4770              BX       lr
;;;159    
                          ENDP

                  |L35.12|
                          DCD      0x40005000

                          AREA ||i.SetEPAddress||, CODE, READONLY, ALIGN=2

                  SetEPAddress PROC
;;;455    *******************************************************************************/
;;;456    void SetEPAddress(uint8_t bEpNum, uint8_t bAddr)
000000  4a07              LDR      r2,|L36.32|
;;;457    {
;;;458      _SetEPAddress(bEpNum, bAddr);
000002  eb020080          ADD      r0,r2,r0,LSL #2
000006  f8d02c00          LDR      r2,[r0,#0xc00]
00000a  f648738f          MOV      r3,#0x8f8f
00000e  b292              UXTH     r2,r2
000010  401a              ANDS     r2,r2,r3
000012  430a              ORRS     r2,r2,r1
000014  f2480180          MOV      r1,#0x8080
000018  430a              ORRS     r2,r2,r1
00001a  f8c02c00          STR      r2,[r0,#0xc00]
;;;459    }
00001e  4770              BX       lr
;;;460    /*******************************************************************************
                          ENDP

                  |L36.32|
                          DCD      0x40005000

                          AREA ||i.SetEPCountRxReg||, CODE, READONLY, ALIGN=1

                  SetEPCountRxReg PROC
;;;536    *******************************************************************************/
;;;537    void SetEPCountRxReg(uint32_t *pdwReg, uint16_t wCount)
000000  293e              CMP      r1,#0x3e
;;;538    {
;;;539      _SetEPCountRxReg(dwReg, wCount);
000002  d909              BLS      |L37.24|
000004  094a              LSRS     r2,r1,#5
000006  06c9              LSLS     r1,r1,#27
000008  d101              BNE      |L37.14|
00000a  1e52              SUBS     r2,r2,#1
00000c  b292              UXTH     r2,r2
                  |L37.14|
00000e  f44f4100          MOV      r1,#0x8000
000012  ea412182          ORR      r1,r1,r2,LSL #10
000016  e005              B        |L37.36|
                  |L37.24|
000018  084a              LSRS     r2,r1,#1
00001a  07c9              LSLS     r1,r1,#31
00001c  d001              BEQ      |L37.34|
00001e  1c52              ADDS     r2,r2,#1
000020  b292              UXTH     r2,r2
                  |L37.34|
000022  0291              LSLS     r1,r2,#10
                  |L37.36|
000024  6001              STR      r1,[r0,#0]
;;;540    }
000026  4770              BX       lr
;;;541    /*******************************************************************************
                          ENDP


                          AREA ||i.SetEPDblBuf0Addr||, CODE, READONLY, ALIGN=2

                  SetEPDblBuf0Addr PROC
;;;595    *******************************************************************************/
;;;596    void SetEPDblBuf0Addr(uint8_t bEpNum, uint16_t wBuf0Addr)
000000  4a05              LDR      r2,|L38.24|
;;;597    {
;;;598      _SetEPDblBuf0Addr(bEpNum, wBuf0Addr);
000002  f0210101          BIC      r1,r1,#1
000006  6813              LDR      r3,[r2,#0]
000008  4a04              LDR      r2,|L38.28|
00000a  b29b              UXTH     r3,r3
00000c  eb0300c0          ADD      r0,r3,r0,LSL #3
000010  f8421010          STR      r1,[r2,r0,LSL #1]
;;;599    }
000014  4770              BX       lr
;;;600    /*******************************************************************************
                          ENDP

000016  0000              DCW      0x0000
                  |L38.24|
                          DCD      0x40005c50
                  |L38.28|
                          DCD      0x40006000

                          AREA ||i.SetEPDblBuf0Count||, CODE, READONLY, ALIGN=2

                  SetEPDblBuf0Count PROC
;;;653    *******************************************************************************/
;;;654    void SetEPDblBuf0Count(uint8_t bEpNum, uint8_t bDir, uint16_t wCount)
000000  4b15              LDR      r3,|L39.88|
;;;655    {
;;;656      _SetEPDblBuf0Count(bEpNum, bDir, wCount);
000002  2901              CMP      r1,#1
000004  d11b              BNE      |L39.62|
000006  f8d31c50          LDR      r1,[r3,#0xc50]
00000a  4b14              LDR      r3,|L39.92|
00000c  b289              UXTH     r1,r1
00000e  eb0100c0          ADD      r0,r1,r0,LSL #3
000012  eb030140          ADD      r1,r3,r0,LSL #1
000016  2a3e              CMP      r2,#0x3e
000018  d909              BLS      |L39.46|
00001a  0950              LSRS     r0,r2,#5
00001c  06d2              LSLS     r2,r2,#27
00001e  d101              BNE      |L39.36|
000020  1e40              SUBS     r0,r0,#1
000022  b280              UXTH     r0,r0
                  |L39.36|
000024  f44f4200          MOV      r2,#0x8000
000028  ea422080          ORR      r0,r2,r0,LSL #10
00002c  e005              B        |L39.58|
                  |L39.46|
00002e  0850              LSRS     r0,r2,#1
000030  07d2              LSLS     r2,r2,#31
000032  d001              BEQ      |L39.56|
000034  1c40              ADDS     r0,r0,#1
000036  b280              UXTH     r0,r0
                  |L39.56|
000038  0280              LSLS     r0,r0,#10
                  |L39.58|
00003a  6008              STR      r0,[r1,#0]
                  |L39.60|
;;;657    }
00003c  4770              BX       lr
                  |L39.62|
00003e  2902              CMP      r1,#2                 ;656
000040  d1fc              BNE      |L39.60|
000042  f8d31c50          LDR      r1,[r3,#0xc50]        ;656
000046  4b05              LDR      r3,|L39.92|
000048  b289              UXTH     r1,r1                 ;656
00004a  1f1b              SUBS     r3,r3,#4              ;656
00004c  eb0100c0          ADD      r0,r1,r0,LSL #3       ;656
000050  eb030040          ADD      r0,r3,r0,LSL #1       ;656
000054  6042              STR      r2,[r0,#4]            ;656
000056  4770              BX       lr
;;;658    /*******************************************************************************
                          ENDP

                  |L39.88|
                          DCD      0x40005000
                  |L39.92|
                          DCD      0x40006004

                          AREA ||i.SetEPDblBuf1Addr||, CODE, READONLY, ALIGN=2

                  SetEPDblBuf1Addr PROC
;;;607    *******************************************************************************/
;;;608    void SetEPDblBuf1Addr(uint8_t bEpNum, uint16_t wBuf1Addr)
000000  4a05              LDR      r2,|L40.24|
;;;609    {
;;;610      _SetEPDblBuf1Addr(bEpNum, wBuf1Addr);
000002  f0210101          BIC      r1,r1,#1
000006  6813              LDR      r3,[r2,#0]
000008  4a04              LDR      r2,|L40.28|
00000a  b29b              UXTH     r3,r3
00000c  eb0300c0          ADD      r0,r3,r0,LSL #3
000010  eb020040          ADD      r0,r2,r0,LSL #1
;;;611    }
000014  6081              STR      r1,[r0,#8]
000016  4770              BX       lr
;;;612    /*******************************************************************************
                          ENDP

                  |L40.24|
                          DCD      0x40005c50
                  |L40.28|
                          DCD      0x40006000

                          AREA ||i.SetEPDblBuf1Count||, CODE, READONLY, ALIGN=2

                  SetEPDblBuf1Count PROC
;;;665    *******************************************************************************/
;;;666    void SetEPDblBuf1Count(uint8_t bEpNum, uint8_t bDir, uint16_t wCount)
000000  4b15              LDR      r3,|L41.88|
;;;667    {
;;;668      _SetEPDblBuf1Count(bEpNum, bDir, wCount);
000002  2901              CMP      r1,#1
000004  d11b              BNE      |L41.62|
000006  f8d31c50          LDR      r1,[r3,#0xc50]
00000a  4b14              LDR      r3,|L41.92|
00000c  b289              UXTH     r1,r1
00000e  eb0100c0          ADD      r0,r1,r0,LSL #3
000012  eb030140          ADD      r1,r3,r0,LSL #1
000016  2a3e              CMP      r2,#0x3e
000018  d909              BLS      |L41.46|
00001a  0950              LSRS     r0,r2,#5
00001c  06d2              LSLS     r2,r2,#27
00001e  d101              BNE      |L41.36|
000020  1e40              SUBS     r0,r0,#1
000022  b280              UXTH     r0,r0
                  |L41.36|
000024  f44f4200          MOV      r2,#0x8000
000028  ea422080          ORR      r0,r2,r0,LSL #10
00002c  e005              B        |L41.58|
                  |L41.46|
00002e  0850              LSRS     r0,r2,#1
000030  07d2              LSLS     r2,r2,#31
000032  d001              BEQ      |L41.56|
000034  1c40              ADDS     r0,r0,#1
000036  b280              UXTH     r0,r0
                  |L41.56|
000038  0280              LSLS     r0,r0,#10
                  |L41.58|
00003a  6008              STR      r0,[r1,#0]
                  |L41.60|
;;;669    }
00003c  4770              BX       lr
                  |L41.62|
00003e  2902              CMP      r1,#2                 ;668
000040  d1fc              BNE      |L41.60|
000042  f8d31c50          LDR      r1,[r3,#0xc50]        ;668
000046  4b05              LDR      r3,|L41.92|
000048  b289              UXTH     r1,r1                 ;668
00004a  3b0c              SUBS     r3,r3,#0xc            ;668
00004c  eb0100c0          ADD      r0,r1,r0,LSL #3       ;668
000050  eb030040          ADD      r0,r3,r0,LSL #1       ;668
000054  60c2              STR      r2,[r0,#0xc]          ;668
000056  4770              BX       lr
;;;670    /*******************************************************************************
                          ENDP

                  |L41.88|
                          DCD      0x40005000
                  |L41.92|
                          DCD      0x4000600c

                          AREA ||i.SetEPDblBuffAddr||, CODE, READONLY, ALIGN=2

                  SetEPDblBuffAddr PROC
;;;583    *******************************************************************************/
;;;584    void SetEPDblBuffAddr(uint8_t bEpNum, uint16_t wBuf0Addr, uint16_t wBuf1Addr)
000000  b530              PUSH     {r4,r5,lr}
;;;585    {
;;;586      _SetEPDblBuffAddr(bEpNum, wBuf0Addr, wBuf1Addr);
000002  4b0a              LDR      r3,|L42.44|
000004  f0210401          BIC      r4,r1,#1
000008  681d              LDR      r5,[r3,#0]
00000a  4909              LDR      r1,|L42.48|
00000c  b2ad              UXTH     r5,r5
00000e  eb0505c0          ADD      r5,r5,r0,LSL #3
000012  f8414015          STR      r4,[r1,r5,LSL #1]
000016  681b              LDR      r3,[r3,#0]
000018  f0220201          BIC      r2,r2,#1
00001c  b29b              UXTH     r3,r3
00001e  eb0300c0          ADD      r0,r3,r0,LSL #3
000022  eb010040          ADD      r0,r1,r0,LSL #1
;;;587    }
000026  6082              STR      r2,[r0,#8]
000028  bd30              POP      {r4,r5,pc}
;;;588    /*******************************************************************************
                          ENDP

00002a  0000              DCW      0x0000
                  |L42.44|
                          DCD      0x40005c50
                  |L42.48|
                          DCD      0x40006000

                          AREA ||i.SetEPDblBuffCount||, CODE, READONLY, ALIGN=2

                  SetEPDblBuffCount PROC
;;;641    *******************************************************************************/
;;;642    void SetEPDblBuffCount(uint8_t bEpNum, uint8_t bDir, uint16_t wCount)
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;643    {
;;;644      _SetEPDblBuffCount(bEpNum, bDir, wCount);
000004  4b28              LDR      r3,|L43.168|
000006  2901              CMP      r1,#1
000008  d132              BNE      |L43.112|
00000a  4699              MOV      r9,r3
00000c  f8d33c50          LDR      r3,[r3,#0xc50]
000010  4926              LDR      r1,|L43.172|
000012  b29b              UXTH     r3,r3
000014  eb0303c0          ADD      r3,r3,r0,LSL #3
000018  eb010543          ADD      r5,r1,r3,LSL #1
00001c  13cf              ASRS     r7,r1,#15
00001e  0953              LSRS     r3,r2,#5
000020  0851              LSRS     r1,r2,#1
000022  1c4c              ADDS     r4,r1,#1
000024  f1a30801          SUB      r8,r3,#1
000028  2a3e              CMP      r2,#0x3e
00002a  d908              BLS      |L43.62|
00002c  461e              MOV      r6,r3
00002e  ea5f6cc2          LSLS     r12,r2,#27
000032  d101              BNE      |L43.56|
000034  fa1ff688          UXTH     r6,r8
                  |L43.56|
000038  ea472686          ORR      r6,r7,r6,LSL #10
00003c  e005              B        |L43.74|
                  |L43.62|
00003e  460e              MOV      r6,r1
000040  ea5f7cc2          LSLS     r12,r2,#31
000044  d000              BEQ      |L43.72|
000046  b2a6              UXTH     r6,r4
                  |L43.72|
000048  02b6              LSLS     r6,r6,#10
                  |L43.74|
00004a  602e              STR      r6,[r5,#0]
00004c  f8d95c50          LDR      r5,[r9,#0xc50]
000050  4e16              LDR      r6,|L43.172|
000052  b2ad              UXTH     r5,r5
000054  3608              ADDS     r6,r6,#8
000056  eb0500c0          ADD      r0,r5,r0,LSL #3
00005a  eb060040          ADD      r0,r6,r0,LSL #1
00005e  2a3e              CMP      r2,#0x3e
000060  d91c              BLS      |L43.156|
000062  06d1              LSLS     r1,r2,#27
000064  d101              BNE      |L43.106|
000066  fa1ff388          UXTH     r3,r8
                  |L43.106|
00006a  ea472183          ORR      r1,r7,r3,LSL #10
00006e  e019              B        |L43.164|
                  |L43.112|
000070  2902              CMP      r1,#2
000072  d111              BNE      |L43.152|
000074  f8d34c50          LDR      r4,[r3,#0xc50]
000078  490c              LDR      r1,|L43.172|
00007a  b2a4              UXTH     r4,r4
00007c  1f09              SUBS     r1,r1,#4
00007e  eb0404c0          ADD      r4,r4,r0,LSL #3
000082  eb010444          ADD      r4,r1,r4,LSL #1
000086  6062              STR      r2,[r4,#4]
000088  f8d33c50          LDR      r3,[r3,#0xc50]
00008c  b29b              UXTH     r3,r3
00008e  eb0300c0          ADD      r0,r3,r0,LSL #3
000092  eb010040          ADD      r0,r1,r0,LSL #1
000096  60c2              STR      r2,[r0,#0xc]
                  |L43.152|
;;;645    }
000098  e8bd83f0          POP      {r4-r9,pc}
                  |L43.156|
00009c  07d2              LSLS     r2,r2,#31             ;644
00009e  d000              BEQ      |L43.162|
0000a0  b2a1              UXTH     r1,r4                 ;644
                  |L43.162|
0000a2  0289              LSLS     r1,r1,#10             ;644
                  |L43.164|
0000a4  6001              STR      r1,[r0,#0]            ;644
0000a6  e7f7              B        |L43.152|
;;;646    /*******************************************************************************
                          ENDP

                  |L43.168|
                          DCD      0x40005000
                  |L43.172|
                          DCD      0x40006004

                          AREA ||i.SetEPDoubleBuff||, CODE, READONLY, ALIGN=2

                  SetEPDoubleBuff PROC
;;;344    *******************************************************************************/
;;;345    void SetEPDoubleBuff(uint8_t bEpNum)
000000  4907              LDR      r1,|L44.32|
;;;346    {
;;;347      _SetEP_KIND(bEpNum);
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  f8d01c00          LDR      r1,[r0,#0xc00]
00000a  f648738f          MOV      r3,#0x8f8f
00000e  b289              UXTH     r1,r1
000010  f2481280          MOV      r2,#0x8180
000014  4019              ANDS     r1,r1,r3
000016  4311              ORRS     r1,r1,r2
000018  f8c01c00          STR      r1,[r0,#0xc00]
;;;348    }
00001c  4770              BX       lr
;;;349    /*******************************************************************************
                          ENDP

00001e  0000              DCW      0x0000
                  |L44.32|
                          DCD      0x40005000

                          AREA ||i.SetEPRxAddr||, CODE, READONLY, ALIGN=2

                  SetEPRxAddr PROC
;;;490    *******************************************************************************/
;;;491    void SetEPRxAddr(uint8_t bEpNum, uint16_t wAddr)
000000  4a05              LDR      r2,|L45.24|
;;;492    {
;;;493      _SetEPRxAddr(bEpNum, wAddr);
000002  f0210101          BIC      r1,r1,#1
000006  6813              LDR      r3,[r2,#0]
000008  4a04              LDR      r2,|L45.28|
00000a  b29b              UXTH     r3,r3
00000c  eb0300c0          ADD      r0,r3,r0,LSL #3
000010  eb020040          ADD      r0,r2,r0,LSL #1
;;;494    }
000014  6081              STR      r1,[r0,#8]
000016  4770              BX       lr
;;;495    /*******************************************************************************
                          ENDP

                  |L45.24|
                          DCD      0x40005c50
                  |L45.28|
                          DCD      0x40006000

                          AREA ||i.SetEPRxCount||, CODE, READONLY, ALIGN=2

                  SetEPRxCount PROC
;;;548    *******************************************************************************/
;;;549    void SetEPRxCount(uint8_t bEpNum, uint16_t wCount)
000000  4a0d              LDR      r2,|L46.56|
;;;550    {
;;;551      _SetEPRxCount(bEpNum, wCount);
000002  6813              LDR      r3,[r2,#0]
000004  4a0d              LDR      r2,|L46.60|
000006  b29b              UXTH     r3,r3
000008  eb0300c0          ADD      r0,r3,r0,LSL #3
00000c  eb020240          ADD      r2,r2,r0,LSL #1
000010  293e              CMP      r1,#0x3e
000012  d909              BLS      |L46.40|
000014  0948              LSRS     r0,r1,#5
000016  06c9              LSLS     r1,r1,#27
000018  d101              BNE      |L46.30|
00001a  1e40              SUBS     r0,r0,#1
00001c  b280              UXTH     r0,r0
                  |L46.30|
00001e  f44f4100          MOV      r1,#0x8000
000022  ea412080          ORR      r0,r1,r0,LSL #10
000026  e005              B        |L46.52|
                  |L46.40|
000028  0848              LSRS     r0,r1,#1
00002a  07c9              LSLS     r1,r1,#31
00002c  d001              BEQ      |L46.50|
00002e  1c40              ADDS     r0,r0,#1
000030  b280              UXTH     r0,r0
                  |L46.50|
000032  0280              LSLS     r0,r0,#10
                  |L46.52|
000034  6010              STR      r0,[r2,#0]
;;;552    }
000036  4770              BX       lr
;;;553    /*******************************************************************************
                          ENDP

                  |L46.56|
                          DCD      0x40005c50
                  |L46.60|
                          DCD      0x4000600c

                          AREA ||i.SetEPRxStatus||, CODE, READONLY, ALIGN=2

                  SetEPRxStatus PROC
;;;217    *******************************************************************************/
;;;218    void SetEPRxStatus(uint8_t bEpNum, uint16_t wState)
000000  4a0c              LDR      r2,|L47.52|
;;;219    {
000002  b510              PUSH     {r4,lr}
;;;220      _SetEPRxStatus(bEpNum, wState);
000004  eb020280          ADD      r2,r2,r0,LSL #2
000008  f8d20c00          LDR      r0,[r2,#0xc00]
00000c  f64b748f          MOV      r4,#0xbf8f
000010  b280              UXTH     r0,r0
000012  04cb              LSLS     r3,r1,#19
000014  ea000004          AND      r0,r0,r4
000018  d501              BPL      |L47.30|
00001a  f4805080          EOR      r0,r0,#0x1000
                  |L47.30|
00001e  0489              LSLS     r1,r1,#18
000020  d501              BPL      |L47.38|
000022  f4805000          EOR      r0,r0,#0x2000
                  |L47.38|
000026  f2480180          MOV      r1,#0x8080
00002a  4308              ORRS     r0,r0,r1
00002c  f8c20c00          STR      r0,[r2,#0xc00]
;;;221    }
000030  bd10              POP      {r4,pc}
;;;222    
                          ENDP

000032  0000              DCW      0x0000
                  |L47.52|
                          DCD      0x40005000

                          AREA ||i.SetEPRxValid||, CODE, READONLY, ALIGN=2

                  SetEPRxValid PROC
;;;287    *******************************************************************************/
;;;288    void SetEPRxValid(uint8_t bEpNum)
000000  4908              LDR      r1,|L48.36|
;;;289    {
;;;290      _SetEPRxStatus(bEpNum, EP_RX_VALID);
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  f8d01c00          LDR      r1,[r0,#0xc00]
00000a  f64b728f          MOV      r2,#0xbf8f
00000e  b289              UXTH     r1,r1
000010  4011              ANDS     r1,r1,r2
000012  f4815140          EOR      r1,r1,#0x3000
000016  f2480280          MOV      r2,#0x8080
00001a  4311              ORRS     r1,r1,r2
00001c  f8c01c00          STR      r1,[r0,#0xc00]
;;;291    }
000020  4770              BX       lr
;;;292    
                          ENDP

000022  0000              DCW      0x0000
                  |L48.36|
                          DCD      0x40005000

                          AREA ||i.SetEPTxAddr||, CODE, READONLY, ALIGN=2

                  SetEPTxAddr PROC
;;;478    *******************************************************************************/
;;;479    void SetEPTxAddr(uint8_t bEpNum, uint16_t wAddr)
000000  4a05              LDR      r2,|L49.24|
;;;480    {
;;;481      _SetEPTxAddr(bEpNum, wAddr);
000002  f0210101          BIC      r1,r1,#1
000006  6813              LDR      r3,[r2,#0]
000008  4a04              LDR      r2,|L49.28|
00000a  b29b              UXTH     r3,r3
00000c  eb0300c0          ADD      r0,r3,r0,LSL #3
000010  f8421010          STR      r1,[r2,r0,LSL #1]
;;;482    }
000014  4770              BX       lr
;;;483    /*******************************************************************************
                          ENDP

000016  0000              DCW      0x0000
                  |L49.24|
                          DCD      0x40005c50
                  |L49.28|
                          DCD      0x40006000

                          AREA ||i.SetEPTxCount||, CODE, READONLY, ALIGN=2

                  SetEPTxCount PROC
;;;524    *******************************************************************************/
;;;525    void SetEPTxCount(uint8_t bEpNum, uint16_t wCount)
000000  4a04              LDR      r2,|L50.20|
;;;526    {
;;;527      _SetEPTxCount(bEpNum, wCount);
000002  6813              LDR      r3,[r2,#0]
000004  4a04              LDR      r2,|L50.24|
000006  b29b              UXTH     r3,r3
000008  eb0300c0          ADD      r0,r3,r0,LSL #3
00000c  eb020040          ADD      r0,r2,r0,LSL #1
;;;528    }
000010  6041              STR      r1,[r0,#4]
000012  4770              BX       lr
;;;529    /*******************************************************************************
                          ENDP

                  |L50.20|
                          DCD      0x40005c50
                  |L50.24|
                          DCD      0x40006000

                          AREA ||i.SetEPTxStatus||, CODE, READONLY, ALIGN=2

                  SetEPTxStatus PROC
;;;204    *******************************************************************************/
;;;205    void SetEPTxStatus(uint8_t bEpNum, uint16_t wState)
000000  4a0c              LDR      r2,|L51.52|
;;;206    {
000002  b510              PUSH     {r4,lr}
;;;207      _SetEPTxStatus(bEpNum, wState);
000004  eb020280          ADD      r2,r2,r0,LSL #2
000008  f8d20c00          LDR      r0,[r2,#0xc00]
00000c  f64874bf          MOV      r4,#0x8fbf
000010  b280              UXTH     r0,r0
000012  06cb              LSLS     r3,r1,#27
000014  ea000004          AND      r0,r0,r4
000018  d501              BPL      |L51.30|
00001a  f0800010          EOR      r0,r0,#0x10
                  |L51.30|
00001e  0689              LSLS     r1,r1,#26
000020  d501              BPL      |L51.38|
000022  f0800020          EOR      r0,r0,#0x20
                  |L51.38|
000026  f2480180          MOV      r1,#0x8080
00002a  4308              ORRS     r0,r0,r1
00002c  f8c20c00          STR      r0,[r2,#0xc00]
;;;208    }
000030  bd10              POP      {r4,pc}
;;;209    
                          ENDP

000032  0000              DCW      0x0000
                  |L51.52|
                          DCD      0x40005000

                          AREA ||i.SetEPTxValid||, CODE, READONLY, ALIGN=2

                  SetEPTxValid PROC
;;;275    *******************************************************************************/
;;;276    void SetEPTxValid(uint8_t bEpNum)
000000  4908              LDR      r1,|L52.36|
;;;277    {
;;;278      _SetEPTxStatus(bEpNum, EP_TX_VALID);
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  f8d01c00          LDR      r1,[r0,#0xc00]
00000a  f64872bf          MOV      r2,#0x8fbf
00000e  b289              UXTH     r1,r1
000010  4011              ANDS     r1,r1,r2
000012  f0810130          EOR      r1,r1,#0x30
000016  f2480280          MOV      r2,#0x8080
00001a  4311              ORRS     r1,r1,r2
00001c  f8c01c00          STR      r1,[r0,#0xc00]
;;;279    }
000020  4770              BX       lr
;;;280    
                          ENDP

000022  0000              DCW      0x0000
                  |L52.36|
                          DCD      0x40005000

                          AREA ||i.SetEPType||, CODE, READONLY, ALIGN=2

                  SetEPType PROC
;;;179    *******************************************************************************/
;;;180    void SetEPType(uint8_t bEpNum, uint16_t wType)
000000  4a06              LDR      r2,|L53.28|
;;;181    {
;;;182      _SetEPType(bEpNum, wType);
000002  eb020080          ADD      r0,r2,r0,LSL #2
000006  f8d02c00          LDR      r2,[r0,#0xc00]
00000a  f648138f          MOV      r3,#0x898f
00000e  b292              UXTH     r2,r2
000010  401a              ANDS     r2,r2,r3
000012  430a              ORRS     r2,r2,r1
000014  f8c02c00          STR      r2,[r0,#0xc00]
;;;183    }
000018  4770              BX       lr
;;;184    
                          ENDP

00001a  0000              DCW      0x0000
                  |L53.28|
                          DCD      0x40005000

                          AREA ||i.SetEP_KIND||, CODE, READONLY, ALIGN=2

                  SetEP_KIND PROC
;;;299    *******************************************************************************/
;;;300    void SetEP_KIND(uint8_t bEpNum)
000000  4907              LDR      r1,|L54.32|
;;;301    {
;;;302      _SetEP_KIND(bEpNum);
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  f8d01c00          LDR      r1,[r0,#0xc00]
00000a  f648738f          MOV      r3,#0x8f8f
00000e  b289              UXTH     r1,r1
000010  f2481280          MOV      r2,#0x8180
000014  4019              ANDS     r1,r1,r3
000016  4311              ORRS     r1,r1,r2
000018  f8c01c00          STR      r1,[r0,#0xc00]
;;;303    }
00001c  4770              BX       lr
;;;304    
                          ENDP

00001e  0000              DCW      0x0000
                  |L54.32|
                          DCD      0x40005000

                          AREA ||i.SetISTR||, CODE, READONLY, ALIGN=2

                  SetISTR PROC
;;;69     *******************************************************************************/
;;;70     void SetISTR(uint16_t wRegValue)
000000  4901              LDR      r1,|L55.8|
;;;71     {
;;;72       _SetISTR(wRegValue);
000002  6008              STR      r0,[r1,#0]
;;;73     }
000004  4770              BX       lr
;;;74     
                          ENDP

000006  0000              DCW      0x0000
                  |L55.8|
                          DCD      0x40005c44

                          AREA ||i.Set_Status_Out||, CODE, READONLY, ALIGN=2

                  Set_Status_Out PROC
;;;333    *******************************************************************************/
;;;334    void Set_Status_Out(uint8_t bEpNum)
000000  4907              LDR      r1,|L56.32|
;;;335    {
;;;336      _SetEP_KIND(bEpNum);
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  f8d01c00          LDR      r1,[r0,#0xc00]
00000a  f648738f          MOV      r3,#0x8f8f
00000e  b289              UXTH     r1,r1
000010  f2481280          MOV      r2,#0x8180
000014  4019              ANDS     r1,r1,r3
000016  4311              ORRS     r1,r1,r2
000018  f8c01c00          STR      r1,[r0,#0xc00]
;;;337    }
00001c  4770              BX       lr
;;;338    /*******************************************************************************
                          ENDP

00001e  0000              DCW      0x0000
                  |L56.32|
                          DCD      0x40005000

                          AREA ||i.ToWord||, CODE, READONLY, ALIGN=1

                  ToWord PROC
;;;737    *******************************************************************************/
;;;738    uint16_t ToWord(uint8_t bh, uint8_t bl)
000000  ea412000          ORR      r0,r1,r0,LSL #8
;;;739    {
;;;740      uint16_t wRet;
;;;741      wRet = (uint16_t)bl | ((uint16_t)bh << 8);
;;;742      return(wRet);
;;;743    }
000004  4770              BX       lr
;;;744    /*******************************************************************************
                          ENDP


                          AREA ||i.ToggleDTOG_RX||, CODE, READONLY, ALIGN=2

                  ToggleDTOG_RX PROC
;;;410    *******************************************************************************/
;;;411    void ToggleDTOG_RX(uint8_t bEpNum)
000000  4907              LDR      r1,|L58.32|
;;;412    {
;;;413      _ToggleDTOG_RX(bEpNum);
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  f8d01c00          LDR      r1,[r0,#0xc00]
00000a  f648738f          MOV      r3,#0x8f8f
00000e  b289              UXTH     r1,r1
000010  f24c0280          MOV      r2,#0xc080
000014  4019              ANDS     r1,r1,r3
000016  4311              ORRS     r1,r1,r2
000018  f8c01c00          STR      r1,[r0,#0xc00]
;;;414    }
00001c  4770              BX       lr
;;;415    /*******************************************************************************
                          ENDP

00001e  0000              DCW      0x0000
                  |L58.32|
                          DCD      0x40005000

                          AREA ||i.ToggleDTOG_TX||, CODE, READONLY, ALIGN=2

                  ToggleDTOG_TX PROC
;;;421    *******************************************************************************/
;;;422    void ToggleDTOG_TX(uint8_t bEpNum)
000000  4907              LDR      r1,|L59.32|
;;;423    {
;;;424      _ToggleDTOG_TX(bEpNum);
000002  eb010080          ADD      r0,r1,r0,LSL #2
000006  f8d01c00          LDR      r1,[r0,#0xc00]
00000a  f648738f          MOV      r3,#0x8f8f
00000e  b289              UXTH     r1,r1
000010  f24802c0          MOV      r2,#0x80c0
000014  4019              ANDS     r1,r1,r3
000016  4311              ORRS     r1,r1,r2
000018  f8c01c00          STR      r1,[r0,#0xc00]
;;;425    }
00001c  4770              BX       lr
;;;426    /*******************************************************************************
                          ENDP

00001e  0000              DCW      0x0000
                  |L59.32|
                          DCD      0x40005000
