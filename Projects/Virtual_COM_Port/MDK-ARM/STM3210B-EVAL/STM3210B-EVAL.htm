<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\STM3210B-EVAL\STM3210B-EVAL.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\STM3210B-EVAL\STM3210B-EVAL.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 728]: Last Updated: Fri Dec 05 18:21:39 2014
<BR><P>
<H3>Maximum Stack Usage =        184 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
USB_LP_CAN1_RX0_IRQHandler &rArr; USB_Istr &rArr; CTR_LP &rArr; Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1911718]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1911718]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[19128e8]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19128e8]">BusFault_Handler</a><BR>
 <LI><a href="#[1912870]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1912870]">HardFault_Handler</a><BR>
 <LI><a href="#[1912834]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1912834]">MemManage_Handler</a><BR>
 <LI><a href="#[1912654]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1912654]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[19172bc]">EP1_IN_Callback</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1917280]">EP3_OUT_Callback</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1914b5c]">Virtual_Com_Port_init</a>
 <LI><a href="#[1914cc4]">Virtual_Com_Port_Reset</a>
 <LI><a href="#[1914bd4]">Virtual_Com_Port_Status_In</a>
 <LI><a href="#[1914b98]">Virtual_Com_Port_Status_Out</a>
 <LI><a href="#[1914e68]">Virtual_Com_Port_Data_Setup</a>
 <LI><a href="#[1914d00]">Virtual_Com_Port_NoData_Setup</a>
 <LI><a href="#[1914d3c]">Virtual_Com_Port_Get_Interface_Setting</a>
 <LI><a href="#[1914df0]">Virtual_Com_Port_GetDeviceDescriptor</a>
 <LI><a href="#[1914e2c]">Virtual_Com_Port_GetConfigDescriptor</a>
 <LI><a href="#[1914d78]">Virtual_Com_Port_GetStringDescriptor</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1914c88]">Virtual_Com_Port_SetConfiguration</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1914c4c]">Virtual_Com_Port_SetDeviceAddress</a>
 <LI><a href="#[1911970]">Reset_Handler</a>
 <LI><a href="#[19127f8]">NMI_Handler</a>
 <LI><a href="#[1912870]">HardFault_Handler</a>
 <LI><a href="#[1912834]">MemManage_Handler</a>
 <LI><a href="#[19128e8]">BusFault_Handler</a>
 <LI><a href="#[1912654]">UsageFault_Handler</a>
 <LI><a href="#[1912780]">SVC_Handler</a>
 <LI><a href="#[19128ac]">DebugMon_Handler</a>
 <LI><a href="#[19127bc]">PendSV_Handler</a>
 <LI><a href="#[1912744]">SysTick_Handler</a>
 <LI><a href="#[1910d40]">WWDG_IRQHandler</a>
 <LI><a href="#[19111f0]">PVD_IRQHandler</a>
 <LI><a href="#[1911088]">TAMPER_IRQHandler</a>
 <LI><a href="#[191113c]">RTC_IRQHandler</a>
 <LI><a href="#[191131c]">FLASH_IRQHandler</a>
 <LI><a href="#[19111b4]">RCC_IRQHandler</a>
 <LI><a href="#[19114c0]">EXTI0_IRQHandler</a>
 <LI><a href="#[1911448]">EXTI1_IRQHandler</a>
 <LI><a href="#[191140c]">EXTI2_IRQHandler</a>
 <LI><a href="#[19113d0]">EXTI3_IRQHandler</a>
 <LI><a href="#[1911394]">EXTI4_IRQHandler</a>
 <LI><a href="#[1911664]">DMA1_Channel1_IRQHandler</a>
 <LI><a href="#[1911628]">DMA1_Channel2_IRQHandler</a>
 <LI><a href="#[19115ec]">DMA1_Channel3_IRQHandler</a>
 <LI><a href="#[19115b0]">DMA1_Channel4_IRQHandler</a>
 <LI><a href="#[1911574]">DMA1_Channel5_IRQHandler</a>
 <LI><a href="#[1911538]">DMA1_Channel6_IRQHandler</a>
 <LI><a href="#[19114fc]">DMA1_Channel7_IRQHandler</a>
 <LI><a href="#[1911718]">ADC1_2_IRQHandler</a>
 <LI><a href="#[1910db8]">USB_HP_CAN1_TX_IRQHandler</a>
 <LI><a href="#[1912690]">USB_LP_CAN1_RX0_IRQHandler</a>
 <LI><a href="#[19116dc]">CAN1_RX1_IRQHandler</a>
 <LI><a href="#[19116a0]">CAN1_SCE_IRQHandler</a>
 <LI><a href="#[1911358]">EXTI9_5_IRQHandler</a>
 <LI><a href="#[191104c]">TIM1_BRK_IRQHandler</a>
 <LI><a href="#[1910f98]">TIM1_UP_IRQHandler</a>
 <LI><a href="#[1910fd4]">TIM1_TRG_COM_IRQHandler</a>
 <LI><a href="#[1911010]">TIM1_CC_IRQHandler</a>
 <LI><a href="#[1910f5c]">TIM2_IRQHandler</a>
 <LI><a href="#[1910f20]">TIM3_IRQHandler</a>
 <LI><a href="#[1910ee4]">TIM4_IRQHandler</a>
 <LI><a href="#[19112a4]">I2C1_EV_IRQHandler</a>
 <LI><a href="#[19112e0]">I2C1_ER_IRQHandler</a>
 <LI><a href="#[191122c]">I2C2_EV_IRQHandler</a>
 <LI><a href="#[1911268]">I2C2_ER_IRQHandler</a>
 <LI><a href="#[1911100]">SPI1_IRQHandler</a>
 <LI><a href="#[19110c4]">SPI2_IRQHandler</a>
 <LI><a href="#[1912708]">USART1_IRQHandler</a>
 <LI><a href="#[1910e6c]">USART2_IRQHandler</a>
 <LI><a href="#[1910e30]">USART3_IRQHandler</a>
 <LI><a href="#[1911484]">EXTI15_10_IRQHandler</a>
 <LI><a href="#[1911178]">RTCAlarm_IRQHandler</a>
 <LI><a href="#[19126cc]">USBWakeUp_IRQHandler</a>
 <LI><a href="#[19181bc]">main</a>
 <LI><a href="#[191875c]">SystemInit</a>
 <LI><a href="#[2a8b868]">__main</a>
 <LI><a href="#[29bc7fc]">Standard_GetStatus</a>
 <LI><a href="#[29bc874]">Standard_GetConfiguration</a>
 <LI><a href="#[29bc838]">Standard_GetInterface</a>
 <LI><a href="#[1914db4]">Virtual_Com_Port_GetLineCoding</a>
 <LI><a href="#[1914c10]">Virtual_Com_Port_SetLineCoding</a>
 <LI><a href="#[19172bc]">EP1_IN_Callback</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1917280]">EP3_OUT_Callback</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1914b5c]">Virtual_Com_Port_init</a>
 <LI><a href="#[1914cc4]">Virtual_Com_Port_Reset</a>
 <LI><a href="#[1914bd4]">Virtual_Com_Port_Status_In</a>
 <LI><a href="#[1914b98]">Virtual_Com_Port_Status_Out</a>
 <LI><a href="#[1914e68]">Virtual_Com_Port_Data_Setup</a>
 <LI><a href="#[1914d00]">Virtual_Com_Port_NoData_Setup</a>
 <LI><a href="#[1914d3c]">Virtual_Com_Port_Get_Interface_Setting</a>
 <LI><a href="#[1914df0]">Virtual_Com_Port_GetDeviceDescriptor</a>
 <LI><a href="#[1914e2c]">Virtual_Com_Port_GetConfigDescriptor</a>
 <LI><a href="#[1914d78]">Virtual_Com_Port_GetStringDescriptor</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1914c88]">Virtual_Com_Port_SetConfiguration</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1916a10]">NOP_Process</a>
 <LI><a href="#[1914c4c]">Virtual_Com_Port_SetDeviceAddress</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2a8b868]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(.text)
</UL>
<P><STRONG><a name="[2a8b520]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2a8b3f4]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2a8b19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2a8b3b8]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2a8b19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2a8b2c8]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[1911970]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1911718]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1911718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1911718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[19116dc]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[19116a0]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1911664]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1911628]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[19115ec]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[19115b0]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1911574]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1911538]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[19114fc]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[19114c0]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1911484]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1911448]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[191140c]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[19113d0]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1911394]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1911358]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[191131c]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[19112e0]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[19112a4]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1911268]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[191122c]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[19111f0]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[19111b4]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1911178]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[191113c]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1911100]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[19110c4]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1911088]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[191104c]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1911010]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1910fd4]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1910f98]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1910f5c]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1910f20]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1910ee4]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1910e6c]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1910e30]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1910db8]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1910d40]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2a8b19c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a8b3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8b3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[2a8b160]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[2a8ac38]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[2a8abfc]"></a>__decompress1</STRONG> (Thumb, 94 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[19128e8]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[19128e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[19128e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[29bc6d0]"></a>ByteSwap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb_regs.o(i.ByteSwap))
<BR><BR>[Called By]<UL><LI><a href="#[29bc8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
</UL>

<P><STRONG><a name="[1916a88]"></a>CTR_LP</STRONG> (Thumb, 328 bytes, Stack size 40 bytes, usb_int.o(i.CTR_LP))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = CTR_LP &rArr; Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[29bc8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
<LI><a href="#[29bc964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out0_Process
<LI><a href="#[29bc9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In0_Process
</UL>
<BR>[Called By]<UL><LI><a href="#[1916ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Istr
</UL>

<P><STRONG><a name="[29bc694]"></a>ClearDTOG_RX</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, usb_regs.o(i.ClearDTOG_RX))
<BR><BR>[Called By]<UL><LI><a href="#[29bc8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
</UL>

<P><STRONG><a name="[29bc658]"></a>ClearDTOG_TX</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, usb_regs.o(i.ClearDTOG_TX))
<BR><BR>[Called By]<UL><LI><a href="#[29bc8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
</UL>

<P><STRONG><a name="[1914b20]"></a>Clear_Status_Out</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, usb_regs.o(i.Clear_Status_Out))
<BR><BR>[Called By]<UL><LI><a href="#[1914cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_Reset
</UL>

<P><STRONG><a name="[19128ac]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[19172bc]"></a>EP1_IN_Callback</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, usb_endp.o(i.EP1_IN_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EP1_IN_Callback &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[1918630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserToPMABufferCopy
<LI><a href="#[1918798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxValid
<LI><a href="#[19187d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxCount
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_istr.o(.data)
</UL>
<P><STRONG><a name="[1917280]"></a>EP3_OUT_Callback</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, usb_endp.o(i.EP3_OUT_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EP3_OUT_Callback &rArr; USB_SIL_Read &rArr; PMAToUserBufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[19171cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Read
<LI><a href="#[1917208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxValid
<LI><a href="#[1918a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_To_USART_Send_Data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_istr.o(.data)
</UL>
<P><STRONG><a name="[19189f0]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[19126cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBWakeUp_IRQHandler
<LI><a href="#[1918c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System
</UL>

<P><STRONG><a name="[19189b4]"></a>EXTI_Init</STRONG> (Thumb, 128 bytes, Stack size 12 bytes, stm32f10x_exti.o(i.EXTI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1918c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System
</UL>

<P><STRONG><a name="[1918978]"></a>GPIO_Init</STRONG> (Thumb, 158 bytes, Stack size 20 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1918810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_COMInit
<LI><a href="#[1918c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System
</UL>

<P><STRONG><a name="[29afd04]"></a>GPIO_PinRemapConfig</STRONG> (Thumb, 82 bytes, Stack size 20 bytes, stm32f10x_gpio.o(i.GPIO_PinRemapConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinRemapConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1918810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_COMInit
</UL>

<P><STRONG><a name="[191893c]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[1918ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Cable_Config
</UL>

<P><STRONG><a name="[1918900]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[1918ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Cable_Config
</UL>

<P><STRONG><a name="[29bc61c]"></a>GetEPRxAddr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usb_regs.o(i.GetEPRxAddr))
<BR><BR>[Called By]<UL><LI><a href="#[190f198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageOut
<LI><a href="#[19171cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Read
</UL>

<P><STRONG><a name="[29b57b8]"></a>GetEPRxCount</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usb_regs.o(i.GetEPRxCount))
<BR><BR>[Called By]<UL><LI><a href="#[19171cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Read
</UL>

<P><STRONG><a name="[29bc5e0]"></a>GetEPTxAddr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usb_regs.o(i.GetEPTxAddr))
<BR><BR>[Called By]<UL><LI><a href="#[190f1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
</UL>

<P><STRONG><a name="[1918cc0]"></a>Get_SerialNum</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hw_config.o(i.Get_SerialNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Get_SerialNum &rArr; IntToUnicode
</UL>
<BR>[Calls]<UL><LI><a href="#[191a250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntToUnicode
</UL>
<BR>[Called By]<UL><LI><a href="#[1914b5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_init
</UL>

<P><STRONG><a name="[1918c84]"></a>Handle_USBAsynchXfer</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, hw_config.o(i.Handle_USBAsynchXfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Handle_USBAsynchXfer &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[1918630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserToPMABufferCopy
<LI><a href="#[1918798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxValid
<LI><a href="#[19187d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxCount
</UL>
<BR>[Called By]<UL><LI><a href="#[1917244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SOF_Callback
</UL>

<P><STRONG><a name="[1912870]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1912870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1912870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[29bc9a0]"></a>In0_Process</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, usb_core.o(i.In0_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = In0_Process &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[190f1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
<LI><a href="#[1914a6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDeviceAddress
<LI><a href="#[29bc928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Post0_Process
</UL>
<BR>[Called By]<UL><LI><a href="#[1916a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_LP
</UL>

<P><STRONG><a name="[1918c48]"></a>Leave_LowPowerMode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hw_config.o(i.Leave_LowPowerMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Leave_LowPowerMode &rArr; SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[191875c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1913be4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resume_Init
</UL>

<P><STRONG><a name="[1912834]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1912834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1912834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[19127f8]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1916a10]"></a>NOP_Process</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_core.o(i.NOP_Process))
<BR>[Address Reference Count : 3]<UL><LI> usb_prop.o(.data)
<LI> usb_istr.o(.data)
<LI> usb_istr.o(.data)
</UL>
<P><STRONG><a name="[191b7a4]"></a>NVIC_Init</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1918aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Interrupts_Config
</UL>

<P><STRONG><a name="[191b768]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1918aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Interrupts_Config
</UL>

<P><STRONG><a name="[29bc964]"></a>Out0_Process</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, usb_core.o(i.Out0_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Out0_Process &rArr; DataStageOut &rArr; PMAToUserBufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[190f198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageOut
<LI><a href="#[29bc928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Post0_Process
</UL>
<BR>[Called By]<UL><LI><a href="#[1916a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_LP
</UL>

<P><STRONG><a name="[29bc5a4]"></a>PMAToUserBufferCopy</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usb_mem.o(i.PMAToUserBufferCopy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PMAToUserBufferCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[190f198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageOut
<LI><a href="#[19171cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Read
</UL>

<P><STRONG><a name="[19127bc]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[29bc928]"></a>Post0_Process</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, usb_core.o(i.Post0_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Post0_Process
</UL>
<BR>[Calls]<UL><LI><a href="#[19149f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxCount
</UL>
<BR>[Called By]<UL><LI><a href="#[29bc8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
<LI><a href="#[29bc964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out0_Process
<LI><a href="#[29bc9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In0_Process
</UL>

<P><STRONG><a name="[1914ae4]"></a>PowerOn</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, usb_pwr.o(i.PowerOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PowerOn
</UL>
<BR>[Calls]<UL><LI><a href="#[1918ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Cable_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[1914b5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_init
</UL>

<P><STRONG><a name="[19188c4]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[1918810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_COMInit
<LI><a href="#[1918bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
</UL>

<P><STRONG><a name="[1918888]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[1918810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_COMInit
<LI><a href="#[1918c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System
</UL>

<P><STRONG><a name="[29b1a14]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, stm32f10x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[29b1e4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[191884c]"></a>RCC_USBCLKConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_USBCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1918bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
</UL>

<P><STRONG><a name="[19169d4]"></a>Resume</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, usb_pwr.o(i.Resume))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Resume &rArr; Resume_Init &rArr; Leave_LowPowerMode &rArr; SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1913be4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resume_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1916ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Istr
</UL>

<P><STRONG><a name="[1913be4]"></a>Resume_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usb_pwr.o(i.Resume_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Resume_Init &rArr; Leave_LowPowerMode &rArr; SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1918c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Leave_LowPowerMode
</UL>
<BR>[Called By]<UL><LI><a href="#[19169d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resume
</UL>

<P><STRONG><a name="[1917244]"></a>SOF_Callback</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, usb_endp.o(i.SOF_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SOF_Callback &rArr; Handle_USBAsynchXfer &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[1918c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Handle_USBAsynchXfer
</UL>
<BR>[Called By]<UL><LI><a href="#[1916ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Istr
</UL>

<P><STRONG><a name="[1918810]"></a>STM_EVAL_COMInit</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, stm3210b_eval.o(i.STM_EVAL_COMInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = STM_EVAL_COMInit &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1918888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[19188c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[1918978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[29afd04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig
<LI><a href="#[29b1e4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[29b1f3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1918b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config_Default
<LI><a href="#[1918b94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>

<P><STRONG><a name="[1912780]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1914aa8]"></a>SetBTABLE</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb_regs.o(i.SetBTABLE))
<BR><BR>[Called By]<UL><LI><a href="#[1914cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_Reset
</UL>

<P><STRONG><a name="[1914a6c]"></a>SetDeviceAddress</STRONG> (Thumb, 60 bytes, Stack size 20 bytes, usb_core.o(i.SetDeviceAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetDeviceAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[1914cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_Reset
<LI><a href="#[29bc9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In0_Process
</UL>

<P><STRONG><a name="[1914a30]"></a>SetEPRxAddr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usb_regs.o(i.SetEPRxAddr))
<BR><BR>[Called By]<UL><LI><a href="#[1914cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_Reset
</UL>

<P><STRONG><a name="[19149f4]"></a>SetEPRxCount</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, usb_regs.o(i.SetEPRxCount))
<BR><BR>[Called By]<UL><LI><a href="#[1914cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_Reset
<LI><a href="#[29bc8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
<LI><a href="#[29bc928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Post0_Process
</UL>

<P><STRONG><a name="[19149b8]"></a>SetEPRxStatus</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, usb_regs.o(i.SetEPRxStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetEPRxStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1914cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_Reset
</UL>

<P><STRONG><a name="[1917208]"></a>SetEPRxValid</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usb_regs.o(i.SetEPRxValid))
<BR><BR>[Called By]<UL><LI><a href="#[1914cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_Reset
<LI><a href="#[1917280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP3_OUT_Callback
</UL>

<P><STRONG><a name="[191497c]"></a>SetEPTxAddr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usb_regs.o(i.SetEPTxAddr))
<BR><BR>[Called By]<UL><LI><a href="#[1914cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_Reset
</UL>

<P><STRONG><a name="[19187d4]"></a>SetEPTxCount</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usb_regs.o(i.SetEPTxCount))
<BR><BR>[Called By]<UL><LI><a href="#[190f198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageOut
<LI><a href="#[190f1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
<LI><a href="#[19172bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP1_IN_Callback
<LI><a href="#[1918c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Handle_USBAsynchXfer
</UL>

<P><STRONG><a name="[1914940]"></a>SetEPTxStatus</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, usb_regs.o(i.SetEPTxStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetEPTxStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1914cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_Reset
<LI><a href="#[29bc8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
</UL>

<P><STRONG><a name="[1918798]"></a>SetEPTxValid</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usb_regs.o(i.SetEPTxValid))
<BR><BR>[Called By]<UL><LI><a href="#[19172bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP1_IN_Callback
<LI><a href="#[1918c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Handle_USBAsynchXfer
</UL>

<P><STRONG><a name="[1914904]"></a>SetEPType</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usb_regs.o(i.SetEPType))
<BR><BR>[Called By]<UL><LI><a href="#[1914cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_Reset
</UL>

<P><STRONG><a name="[1918c0c]"></a>Set_System</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, hw_config.o(i.Set_System))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Set_System &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1918888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[1918978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[19189b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[19189f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[19181bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1918bd0]"></a>Set_USBClock</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, hw_config.o(i.Set_USBClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Set_USBClock
</UL>
<BR>[Calls]<UL><LI><a href="#[191884c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_USBCLKConfig
<LI><a href="#[19188c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[19181bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[29bc8ec]"></a>Setup0_Process</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, usb_core.o(i.Setup0_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[190f120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
<LI><a href="#[190f15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Setup0
<LI><a href="#[29bc6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteSwap
<LI><a href="#[29bc928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Post0_Process
</UL>
<BR>[Called By]<UL><LI><a href="#[1916a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_LP
</UL>

<P><STRONG><a name="[29bc8b0]"></a>Standard_ClearFeature</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, usb_core.o(i.Standard_ClearFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Standard_ClearFeature &rArr; SetEPTxStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[1914940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxStatus
<LI><a href="#[19149f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxCount
<LI><a href="#[29bc658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDTOG_TX
<LI><a href="#[29bc694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDTOG_RX
</UL>
<BR>[Called By]<UL><LI><a href="#[190f120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[29bc874]"></a>Standard_GetConfiguration</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usb_core.o(i.Standard_GetConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_GetConfiguration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_core.o(i.Data_Setup0)
</UL>
<P><STRONG><a name="[19148c8]"></a>Standard_GetDescriptorData</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usb_core.o(i.Standard_GetDescriptorData))
<BR><BR>[Called By]<UL><LI><a href="#[1914d78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_GetStringDescriptor
<LI><a href="#[1914df0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_GetDeviceDescriptor
<LI><a href="#[1914e2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_GetConfigDescriptor
</UL>

<P><STRONG><a name="[29bc838]"></a>Standard_GetInterface</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usb_core.o(i.Standard_GetInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_GetInterface
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_core.o(i.Data_Setup0)
</UL>
<P><STRONG><a name="[29bc7fc]"></a>Standard_GetStatus</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, usb_core.o(i.Standard_GetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_GetStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_core.o(i.Data_Setup0)
</UL>
<P><STRONG><a name="[29bc7c0]"></a>Standard_SetConfiguration</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, usb_core.o(i.Standard_SetConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_SetConfiguration
</UL>
<BR>[Called By]<UL><LI><a href="#[190f120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[29bc784]"></a>Standard_SetDeviceFeature</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usb_core.o(i.Standard_SetDeviceFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_SetDeviceFeature
</UL>
<BR>[Called By]<UL><LI><a href="#[190f120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[29bc748]"></a>Standard_SetEndPointFeature</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, usb_core.o(i.Standard_SetEndPointFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Standard_SetEndPointFeature
</UL>
<BR>[Called By]<UL><LI><a href="#[190f120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[29bc70c]"></a>Standard_SetInterface</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, usb_core.o(i.Standard_SetInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Standard_SetInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[190f120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoData_Setup0
</UL>

<P><STRONG><a name="[1916998]"></a>Suspend</STRONG> (Thumb, 202 bytes, Stack size 12 bytes, usb_pwr.o(i.Suspend))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Suspend
</UL>
<BR>[Called By]<UL><LI><a href="#[1916ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Istr
</UL>

<P><STRONG><a name="[1912744]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[191875c]"></a>SystemInit</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[191203c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[1918c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Leave_LowPowerMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(.text)
</UL>
<P><STRONG><a name="[1912708]"></a>USART1_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32_it.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART1_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[1912618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[19186a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[1918720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[1918b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_To_USB_Send_Data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[29b1f3c]"></a>USART_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[1918810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_COMInit
</UL>

<P><STRONG><a name="[1918b94]"></a>USART_Config</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, hw_config.o(i.USART_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USART_Config &rArr; USART_Config_Default &rArr; STM_EVAL_COMInit &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1918810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_COMInit
<LI><a href="#[1918b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config_Default
</UL>
<BR>[Called By]<UL><LI><a href="#[1914bd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_Status_In
</UL>

<P><STRONG><a name="[1918b58]"></a>USART_Config_Default</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, hw_config.o(i.USART_Config_Default))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USART_Config_Default &rArr; STM_EVAL_COMInit &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[19186e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[1918810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_COMInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1914b5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_init
<LI><a href="#[1918b94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>

<P><STRONG><a name="[1918720]"></a>USART_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[1912708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[1918a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_To_USART_Send_Data
</UL>

<P><STRONG><a name="[1912618]"></a>USART_GetITStatus</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, stm32f10x_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1912708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[19186e4]"></a>USART_ITConfig</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f10x_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1918b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config_Default
</UL>

<P><STRONG><a name="[29b1e4c]"></a>USART_Init</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, stm32f10x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[29b1a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1918810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_COMInit
</UL>

<P><STRONG><a name="[19186a8]"></a>USART_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[1912708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[1918b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_To_USB_Send_Data
</UL>

<P><STRONG><a name="[191866c]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[1918a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_To_USART_Send_Data
</UL>

<P><STRONG><a name="[1918b1c]"></a>USART_To_USB_Send_Data</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, hw_config.o(i.USART_To_USB_Send_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_To_USB_Send_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[19186a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
</UL>
<BR>[Called By]<UL><LI><a href="#[1912708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[19126cc]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32_it.o(i.USBWakeUp_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[19189f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1918ae0]"></a>USB_Cable_Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hw_config.o(i.USB_Cable_Config))
<BR><BR>[Calls]<UL><LI><a href="#[1918900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[191893c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[1914ae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn
</UL>

<P><STRONG><a name="[1918180]"></a>USB_Init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usb_init.o(i.USB_Init))
<BR><BR>[Called By]<UL><LI><a href="#[19181bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1918aa4]"></a>USB_Interrupts_Config</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, hw_config.o(i.USB_Interrupts_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USB_Interrupts_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[191b768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[191b7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[19181bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1916ac4]"></a>USB_Istr</STRONG> (Thumb, 328 bytes, Stack size 56 bytes, usb_istr.o(i.USB_Istr))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = USB_Istr &rArr; CTR_LP &rArr; Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[1916998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Suspend
<LI><a href="#[19169d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Resume
<LI><a href="#[1916a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTR_LP
<LI><a href="#[1917244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SOF_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[1912690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_LP_CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[1912690]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32_it.o(i.USB_LP_CAN1_RX0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = USB_LP_CAN1_RX0_IRQHandler &rArr; USB_Istr &rArr; CTR_LP &rArr; Setup0_Process &rArr; Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[1916ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Istr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[191488c]"></a>USB_SIL_Init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usb_sil.o(i.USB_SIL_Init))
<BR><BR>[Called By]<UL><LI><a href="#[1914b5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Virtual_Com_Port_init
</UL>

<P><STRONG><a name="[19171cc]"></a>USB_SIL_Read</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, usb_sil.o(i.USB_SIL_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_SIL_Read &rArr; PMAToUserBufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[29b57b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPRxCount
<LI><a href="#[29bc5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMAToUserBufferCopy
<LI><a href="#[29bc61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPRxAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[1917280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP3_OUT_Callback
</UL>

<P><STRONG><a name="[1918a68]"></a>USB_To_USART_Send_Data</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, hw_config.o(i.USB_To_USART_Send_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_To_USART_Send_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[191866c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[1918720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1917280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP3_OUT_Callback
</UL>

<P><STRONG><a name="[1912654]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1912654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1912654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1918630]"></a>UserToPMABufferCopy</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, usb_mem.o(i.UserToPMABufferCopy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UserToPMABufferCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[190f1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
<LI><a href="#[19172bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EP1_IN_Callback
<LI><a href="#[1918c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Handle_USBAsynchXfer
</UL>

<P><STRONG><a name="[1914e68]"></a>Virtual_Com_Port_Data_Setup</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, usb_prop.o(i.Virtual_Com_Port_Data_Setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Virtual_Com_Port_Data_Setup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[1914e2c]"></a>Virtual_Com_Port_GetConfigDescriptor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb_prop.o(i.Virtual_Com_Port_GetConfigDescriptor))
<BR><BR>[Calls]<UL><LI><a href="#[19148c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_GetDescriptorData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[1914df0]"></a>Virtual_Com_Port_GetDeviceDescriptor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb_prop.o(i.Virtual_Com_Port_GetDeviceDescriptor))
<BR><BR>[Calls]<UL><LI><a href="#[19148c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_GetDescriptorData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[1914db4]"></a>Virtual_Com_Port_GetLineCoding</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usb_prop.o(i.Virtual_Com_Port_GetLineCoding))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(i.Virtual_Com_Port_Data_Setup)
</UL>
<P><STRONG><a name="[1914d78]"></a>Virtual_Com_Port_GetStringDescriptor</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usb_prop.o(i.Virtual_Com_Port_GetStringDescriptor))
<BR><BR>[Calls]<UL><LI><a href="#[19148c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_GetDescriptorData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[1914d3c]"></a>Virtual_Com_Port_Get_Interface_Setting</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usb_prop.o(i.Virtual_Com_Port_Get_Interface_Setting))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[1914d00]"></a>Virtual_Com_Port_NoData_Setup</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, usb_prop.o(i.Virtual_Com_Port_NoData_Setup))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[1914cc4]"></a>Virtual_Com_Port_Reset</STRONG> (Thumb, 208 bytes, Stack size 8 bytes, usb_prop.o(i.Virtual_Com_Port_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Virtual_Com_Port_Reset &rArr; SetDeviceAddress
</UL>
<BR>[Calls]<UL><LI><a href="#[1914904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPType
<LI><a href="#[1914940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxStatus
<LI><a href="#[191497c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxAddr
<LI><a href="#[19149b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxStatus
<LI><a href="#[19149f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxCount
<LI><a href="#[1914a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxAddr
<LI><a href="#[1914a6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDeviceAddress
<LI><a href="#[1914aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBTABLE
<LI><a href="#[1914b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Status_Out
<LI><a href="#[1917208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPRxValid
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[1914c88]"></a>Virtual_Com_Port_SetConfiguration</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb_prop.o(i.Virtual_Com_Port_SetConfiguration))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[1914c4c]"></a>Virtual_Com_Port_SetDeviceAddress</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_prop.o(i.Virtual_Com_Port_SetDeviceAddress))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[1914c10]"></a>Virtual_Com_Port_SetLineCoding</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usb_prop.o(i.Virtual_Com_Port_SetLineCoding))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(i.Virtual_Com_Port_Data_Setup)
</UL>
<P><STRONG><a name="[1914bd4]"></a>Virtual_Com_Port_Status_In</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, usb_prop.o(i.Virtual_Com_Port_Status_In))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Virtual_Com_Port_Status_In &rArr; USART_Config &rArr; USART_Config_Default &rArr; STM_EVAL_COMInit &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1918b94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[1914b98]"></a>Virtual_Com_Port_Status_Out</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usb_prop.o(i.Virtual_Com_Port_Status_Out))
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[1914b5c]"></a>Virtual_Com_Port_init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usb_prop.o(i.Virtual_Com_Port_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Virtual_Com_Port_init &rArr; USART_Config_Default &rArr; STM_EVAL_COMInit &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[191488c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SIL_Init
<LI><a href="#[1914ae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn
<LI><a href="#[1918b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config_Default
<LI><a href="#[1918cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SerialNum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_prop.o(.data)
</UL>
<P><STRONG><a name="[2a8ada0]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[2a8ad64]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[2a8ad28]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[19181bc]"></a>main</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = main &rArr; USB_Interrupts_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1918180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
<LI><a href="#[1918aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Interrupts_Config
<LI><a href="#[1918bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_USBClock
<LI><a href="#[1918c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_System
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[191a250]"></a>IntToUnicode</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, hw_config.o(i.IntToUnicode))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = IntToUnicode
</UL>
<BR>[Called By]<UL><LI><a href="#[1918cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SerialNum
</UL>

<P><STRONG><a name="[191203c]"></a>SetSysClockTo72</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, system_stm32f10x.o(i.SetSysClockTo72))
<BR><BR>[Called By]<UL><LI><a href="#[191875c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[190f1d4]"></a>DataStageIn</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, usb_core.o(i.DataStageIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[1918630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserToPMABufferCopy
<LI><a href="#[19187d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxCount
<LI><a href="#[29bc5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPTxAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[190f15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Setup0
<LI><a href="#[29bc9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;In0_Process
</UL>

<P><STRONG><a name="[190f198]"></a>DataStageOut</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, usb_core.o(i.DataStageOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DataStageOut &rArr; PMAToUserBufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[19187d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetEPTxCount
<LI><a href="#[29bc5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMAToUserBufferCopy
<LI><a href="#[29bc61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEPRxAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[29bc964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Out0_Process
</UL>

<P><STRONG><a name="[190f15c]"></a>Data_Setup0</STRONG> (Thumb, 380 bytes, Stack size 24 bytes, usb_core.o(i.Data_Setup0))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Data_Setup0 &rArr; DataStageIn &rArr; UserToPMABufferCopy
</UL>
<BR>[Calls]<UL><LI><a href="#[190f1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStageIn
</UL>
<BR>[Called By]<UL><LI><a href="#[29bc8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
</UL>

<P><STRONG><a name="[190f120]"></a>NoData_Setup0</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, usb_core.o(i.NoData_Setup0))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = NoData_Setup0 &rArr; Standard_ClearFeature &rArr; SetEPTxStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[29bc70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_SetInterface
<LI><a href="#[29bc748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_SetEndPointFeature
<LI><a href="#[29bc784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_SetDeviceFeature
<LI><a href="#[29bc7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_SetConfiguration
<LI><a href="#[29bc8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standard_ClearFeature
</UL>
<BR>[Called By]<UL><LI><a href="#[29bc8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup0_Process
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
